class java.lang.Object 
{
void <init>() static: { } { };
}

class NodeLL
{
  void <init>() static: 
    { } 
    { field(@this:,<NodeLL: NodeLL next>,nil()) * 
        field(@this:,<NodeLL: java.lang.String content>,nil())  };
}


class LinkedList
{
  define LL(x) =  
       field(x,<LinkedList: NodeLL tail>,_t) 
       * field(x,<LinkedList: NodeLL head>,_h) 
       * ( _t = nil() * _h = nil() 
        ||  _t!=nil() * lspe(_h,_t) * NodeLL(_t,nil())); 



       
  void <init>() : 
   { } 
   { field(@this:,<LinkedList: NodeLL tail>,nil()) 
       * field(@this:,<LinkedList: NodeLL head>,nil()) };

  void create() : 
   { field(@this:,<LinkedList: NodeLL tail>,nil()) 
       * field(@this:,<LinkedList: NodeLL head>,nil()) }
   { LL$(@this:) };


  void reverseList() : 
   { LL$(@this:) } 
   { LL$(@this:) };

  //This is called by insertAtTail with dynamic dispatch.
  void insertAtHead(java.lang.String) : 
   { LL$LinkedList(@this:) } 
   { LL$LinkedList(@this:) };

  void insertAtTail(java.lang.String) : 
   { LL$(@this:) } 
   { LL$(@this:) };

  void printList() : 
   { LL$(@this:) } 
   { LL$(@this:) };
}

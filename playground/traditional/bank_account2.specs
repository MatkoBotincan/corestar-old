class BANK_ACCOUNT
{
	export BA(x, {bal=b}) = x.<BANK_ACCOUNT: int balance> |-> b;

	void <init>(int) :
		{@parameter0: > numeric_const(0)}
		{BA$(@this:, {bal=@parameter0:})};
	void deposit(int) :
		{BA$(@this:, {bal=_b}) * @parameter0: > numeric_const(0)}
		{BA$(@this:, {bal=builtin_plus(_b, @parameter0:)})};
	void dummy(int) :
		{BA$(@this:, {bal=_b}) * @parameter0: > numeric_const(0)}
		{BA$(@this:, {bal=_b}) * @parameter0: > numeric_const(0) * $ret_var = numeric_const(1)};
	void withdraw(int) :
		{BA$(@this:, {bal=_b}) * @parameter0: < _b}
		{BA$(@this:, {bal=builtin_minus(_b, @parameter0:)})};
}


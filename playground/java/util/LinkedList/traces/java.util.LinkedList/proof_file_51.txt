Goal
r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
r_4891 = @this: = r0  *
r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)   
| $ret_var = _v_1496
  | field(@this:, <java.util.LinkedList: int modCount>,
          (_v_1499 + numeric_const(1))) *
    node(_v_1496, $r2, $r3, @parameter0:) *
    field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          _v_1496) *
    field($r3,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          _v_1496) *
    field(@this:, <java.util.LinkedList: int size>,
          ((numeric_const(1) + length(r_4896)) + numeric_const(1))) *
    field($r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_4895) *
    field($r3, <java.util.LinkedList$Entry: java.lang.Object element>, r_4894) *
    field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r2) *
    field($r2,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_4887)
  (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
  || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
|- v_343 = r_5092 * @parameter0: = r_5091 * cons(r_5091, r_5092) = r_5090 *
   {list=r_5090} = r_5089 * @this: = r_5088
   | LinkedList$java.util.LinkedList(r_5088, r_5089) 

Start time :2.204137 
FooElim eqs : $ret_var = _v_1496


====================Start rewrites======================Using rule:
plus_reorder_numeric_const_second gives
r_5095 = (numeric_const(1) + _v_1499)  
equal to r_4914 = (_v_1499 + numeric_const(1)) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
 r_4910 = $ret_var = _v_1496  *
 r_5095 = (numeric_const(1) + _v_1499) = (_v_1499 + numeric_const(1))   
  | 
    | field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_1499)) *
      node($ret_var, $r2, $r3, @parameter0:) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $ret_var) *
      field(@this:, <java.util.LinkedList: int size>,
            ((numeric_const(1) + length(r_4896)) + numeric_const(1))) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_4895) *
      field($r3, <java.util.LinkedList$Entry: java.lang.Object element>,
            r_4894) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_4887)
    (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
    || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
 |- @this: = @this: *
    {list=cons(@parameter0:, v_343)} = {list=cons(@parameter0:, v_343)} *
    cons(@parameter0:, v_343) = cons(@parameter0:, v_343) *
    @parameter0: = @parameter0: * v_343 = v_343
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=cons(@parameter0:, v_343)})
    


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule:
plus_reorder_numeric_const_second gives
r_5096 = (numeric_const(1) + (numeric_const(1) + length(r_4896)))  
equal to r_4912 = ((numeric_const(1) + length(r_4896)) + numeric_const(1)) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
 r_4910 = $ret_var = _v_1496  *
 r_5096 = (numeric_const(1) + (numeric_const(1) + length(r_4896))) =
 ((numeric_const(1) + length(r_4896)) + numeric_const(1))   
 | 
   | field(@this:, <java.util.LinkedList: int modCount>,
           (numeric_const(1) + _v_1499)) *
     node($ret_var, $r2, $r3, @parameter0:) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           $ret_var) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $ret_var) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4895) *
     field($r3, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_4894) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_4887)
   (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
   || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
 |- @this: = @this: *
    {list=cons(@parameter0:, v_343)} = {list=cons(@parameter0:, v_343)} *
    cons(@parameter0:, v_343) = cons(@parameter0:, v_343) *
    @parameter0: = @parameter0: * v_343 = v_343
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=cons(@parameter0:, v_343)})
    


====================Start rewrites=======================================Finished rewrites====================

>r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
 r_4910 = $ret_var = _v_1496   
 | 
   | field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_4887) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2) *
     field($r3, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_4894) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4895) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $ret_var) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           $ret_var) *
     node($ret_var, $r2, $r3, @parameter0:) *
     field(@this:, <java.util.LinkedList: int modCount>,
           (numeric_const(1) + _v_1499))
   (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
   || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
 |- 
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=cons(@parameter0:, v_343)})
    

Rule: node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
  r_4891 = @this: = r0  *
  r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
  r_4910 = $ret_var = _v_1496   
  | 
    | field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_1499)) *
      node($ret_var, $r2, $r3, @parameter0:) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_4887) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
      node($r3, $ret_var, r_4895, r_4894)
    (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
    || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
  |- 
     | LinkedList$java.util.LinkedList(@this:,
                                       {list=cons(@parameter0:, v_343)})
     

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
   r_4891 = @this: = r0  *
   r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
   r_4910 = $ret_var = _v_1496   
   | 
     | node($r3, $ret_var, r_4895, r_4894) *
       field(@this:, <java.util.LinkedList: int size>,
             (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_4887) *
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $ret_var) *
       field(@this:, <java.util.LinkedList: int modCount>,
             (numeric_const(1) + _v_1499)) *
       dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))
     (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
     || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
   |- 
      | LinkedList$java.util.LinkedList(@this:,
                                        {list=cons(@parameter0:, v_343)})
      

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
    r_4891 = @this: = r0  *
    r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
    r_4910 = $ret_var = _v_1496   
    | 
      | dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty())) *
        field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_1499)) *
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $ret_var) *
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_4887) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
        field(@this:, <java.util.LinkedList: int size>,
              (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
        dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty()))
      (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
      || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
    |- 
       | LinkedList$java.util.LinkedList(@this:,
                                         {list=cons(@parameter0:, v_343)})
       

Rule: apf_body_right_LinkedList

Foo

====================Start rewrites======================Using rule:
length_cons gives
r_5096 = (numeric_const(1) + (numeric_const(1) + length(r_4896)))  
equal to r_5107 = length(cons(@parameter0:, v_343)) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
 r_4910 = $ret_var = _v_1496  *
 r_5096 = (numeric_const(1) + (numeric_const(1) + length(r_4896))) =
 length(cons(@parameter0:, v_343))   
 | 
   | dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty())) *
     field(@this:, <java.util.LinkedList: int modCount>,
           (numeric_const(1) + _v_1499)) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           $ret_var) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_4887) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
     dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty()))
   (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
   || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
 |- cons(@parameter0:, v_343) = cons(@parameter0:, v_343) *
    (numeric_const(1) + (numeric_const(1) + length(r_4896))) = (numeric_const(1)
                                                               +
                                                               (numeric_const(1)
                                                               +
                                                               length(r_4896)))
    | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                              {modCount=r_5105}) *
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(1) + (numeric_const(1) + length(r_4896)))) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r_5102) *
      field(r_5102,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_5103) *
      field(r_5102,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_5101) *
      dseg(r_5103, r_5102, r_5102, r_5101, cons(@parameter0:, v_343))
    


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
     r_4891 = @this: = r0  *
     r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
     r_4910 = $ret_var = _v_1496  
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + (numeric_const(1) + length(r_4896))))
     | 
       | dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty())) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               r_4887) *
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $ret_var) *
         field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_1499)) *
         dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))
       (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
       || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
     |- 
        | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                  {modCount=r_5105}) *
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                r_5102) *
          field(r_5102,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                r_5103) *
          field(r_5102,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                r_5101) *
          dseg(r_5103, r_5102, r_5102, r_5101, cons(@parameter0:, v_343))
        

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
      r_4891 = @this: = r0  *
      r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
      r_4910 = $ret_var = _v_1496  
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(1) + (numeric_const(1) + length(r_4896))))
      | 
        | dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty())) *
          field(@this:, <java.util.LinkedList: int modCount>,
                (numeric_const(1) + _v_1499)) *
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $ret_var) *
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                r_4887) *
          dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty()))
        (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
        || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
      |- 
         | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                   {modCount=r_5105}) *
           field($r2,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 r_5103) *
           field($r2,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 r_5101) *
           dseg(r_5103, $r2, $r2, r_5101, cons(@parameter0:, v_343))
         

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_4888 = v_343 = cons(r_4894, r_4896)  * r_4890 = @parameter0: = r1  *
       r_4891 = @this: = r0  *
       r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
       r_4910 = $ret_var = _v_1496  
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $ret_var)*
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
       field(@this:, <java.util.LinkedList: int size>,
             (numeric_const(1) + (numeric_const(1) + length(r_4896))))
       | 
         | dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty())) *
           field($r2,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 r_4887) *
           dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty())) *
           field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_1499))
         (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
         || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
       |- 
          | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                    {modCount=r_5105}) *
            field($r2,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  r_5101) *
            dseg($ret_var, $r2, $r2, r_5101, cons(@parameter0:, v_343))
          

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_4888 = v_343 = cons(r_4894, r_4896)  *
        r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
        r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
        r_4910 = $ret_var = _v_1496  
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_4887)*
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $ret_var)*
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
        field(@this:, <java.util.LinkedList: int size>,
              (numeric_const(1) + (numeric_const(1) + length(r_4896))))
        | 
          | field(@this:, <java.util.LinkedList: int modCount>,
                  (numeric_const(1) + _v_1499)) *
            dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty())) *
            dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty()))
          (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
          || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
        |- 
           | AbstractSequentialList$java.util.AbstractSequentialList(
             @this:, {modCount=r_5105}) *
             dseg($ret_var, $r2, $r2, r_4887, cons(@parameter0:, v_343))
           

Rule: dseg_non_empty3_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------->r_4888 = v_343 = cons(r_4894, r_4896)  *
         r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
         r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
         r_4910 = $ret_var = _v_1496  
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               r_4887)*
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $ret_var)*
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
         field(@this:, <java.util.LinkedList: int size>,
               (numeric_const(1) + (numeric_const(1) + length(r_4896))))
         | 
           | dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty())) *
             dseg_ne($ret_var, $r2, $r3, $ret_var,
                     cons(@parameter0:, empty())) *
             field(@this:, <java.util.LinkedList: int modCount>,
                   (numeric_const(1) + _v_1499))
           (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
           || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
         |- 
            | dseg_ne($ret_var, $r2, $r2, r_4887, cons(@parameter0:, v_343)) *
              AbstractSequentialList$java.util.AbstractSequentialList(
              @this:, {modCount=r_5105})
            

Rule: apf_body_right_AbstractSequentialList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------->r_4888 = v_343 = cons(r_4894, r_4896)  *
          r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
          r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
          r_4910 = $ret_var = _v_1496  
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                r_4887)*
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $ret_var)*
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r2)*
          field(@this:, <java.util.LinkedList: int size>,
                (numeric_const(1) + (numeric_const(1) + length(r_4896))))
          | 
            | field(@this:, <java.util.LinkedList: int modCount>,
                    (numeric_const(1) + _v_1499)) *
              dseg_ne($ret_var, $r2, $r3, $ret_var,
                      cons(@parameter0:, empty())) *
              dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty()))
            (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
            || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
          |- 
             | AbstractList$java.util.AbstractList(@this:, {modCount=r_5108}) *
               dseg_ne($ret_var, $r2, $r2, r_4887, cons(@parameter0:, v_343))
             

Rule: apf_body_right_AbstractList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---------->r_4888 = v_343 = cons(r_4894, r_4896)  *
           r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
           r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
           r_4910 = $ret_var = _v_1496  
           field($r2,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 r_4887)*
           field($r2,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 $ret_var)*
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r2)*
           field(@this:, <java.util.LinkedList: int size>,
                 (numeric_const(1) + (numeric_const(1) + length(r_4896))))
           | 
             | dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty())) *
               dseg_ne($ret_var, $r2, $r3, $ret_var,
                       cons(@parameter0:, empty())) *
               field(@this:, <java.util.LinkedList: int modCount>,
                     (numeric_const(1) + _v_1499))
             (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
             || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
           |- 
              | field(@this:, <java.util.AbstractList: int modCount>, r_5110) *
                dseg_ne($ret_var, $r2, $r2, r_4887, cons(@parameter0:, v_343))
              

Rule: inherit_modcount2

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----------->r_4888 = v_343 = cons(r_4894, r_4896)  *
            r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
            r_4903 = (numeric_const(1) + length(r_4896)) = length(v_343)  *
            r_4910 = $ret_var = _v_1496  
            field(@this:, <java.util.AbstractList: int modCount>,
                  (numeric_const(1) + _v_1499))*
            field($r2,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  r_4887)*
            field($r2,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                  $ret_var)*
            field(@this:,
                  <java.util.LinkedList: java.util.LinkedList$Entry header>,
                  $r2)*
            field(@this:, <java.util.LinkedList: int size>,
                  (numeric_const(1) + (numeric_const(1) + length(r_4896))))
            | 
              | dseg_ne($r3, $ret_var, r_4895, $r3, cons(r_4894, empty())) *
                dseg_ne($ret_var, $r2, $r3, $ret_var,
                        cons(@parameter0:, empty()))
              (r_4896 = empty() * r_4895 = $r2 * r_4887 = $r3 |  )
              || ( | dseg_ne(r_4895, $r3, $r2, r_4887, r_4896) ) 
            |- 
               | dseg_ne($ret_var, $r2, $r2, r_4887,
                         cons(@parameter0:, v_343))
               



====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : r_4896 = empty() * r_4895 = $r2 *
r_4887 = $r3


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------------>r_4888 = v_343 = cons(r_4894, empty())  *
             r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
             r_4903 = (numeric_const(1) + length(empty())) = length(v_343)  *
             r_4910 = $ret_var = _v_1496  
             field(@this:, <java.util.AbstractList: int modCount>,
                   (numeric_const(1) + _v_1499))*
             field($r2,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   $r3)*
             field($r2,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   $ret_var)*
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   $r2)*
             field(@this:, <java.util.LinkedList: int size>,
                   (numeric_const(1) + (numeric_const(1) + length(empty()))))
             | 
               | dseg_ne($ret_var, $r2, $r3, $ret_var,
                         cons(@parameter0:, empty())) *
                 dseg_ne($r3, $ret_var, $r2, $r3, v_343)
                
             |- 
                | dseg_ne($ret_var, $r2, $r2, $r3, cons(@parameter0:, v_343)) 
                

Rule: dseg_app_rollup_left2

Foo

====================Start rewrites======================Using rule: app_cons
gives r_5141 = cons(@parameter0:, app(empty(), v_343))  
equal to r_5139 = app(cons(@parameter0:, empty()), v_343) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, empty())  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4903 = (numeric_const(1) + length(empty())) = length(v_343)  *
 r_4910 = $ret_var = _v_1496  *
 r_5141 = cons(@parameter0:, app(empty(), v_343)) =
 app(cons(@parameter0:, empty()), v_343)  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, $r2, $r3, v_343)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r3)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + (numeric_const(1) + length(empty()))))
 |  |   
 |- cons(@parameter0:, v_343) = cons(@parameter0:, app(empty(), v_343)) |  


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule:
app_empty_first gives r_4888 = v_343 = cons(r_4894, empty())  
equal to r_5140 = app(empty(), v_343) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, empty()) = app(empty(), v_343)  *
 r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
 r_4903 = (numeric_const(1) + length(empty())) = length(v_343)  *
 r_4910 = $ret_var = _v_1496  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, $r2, $r3, v_343)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r3)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + (numeric_const(1) + length(empty()))))
 |  |    |- cons(@parameter0:, v_343) = cons(@parameter0:, v_343) |  


====================Start rewrites=======================================Finished rewrites====================

------------->r_4888 = v_343 = cons(r_4894, empty())  *
              r_4890 = @parameter0: = r1  * r_4891 = @this: = r0  *
              r_4903 = (numeric_const(1) + length(empty())) = length(v_343)  *
              r_4910 = $ret_var = _v_1496  
              dseg_ne($ret_var, $r2, $r3, $ret_var,
                      cons(@parameter0:, empty()))*
              dseg_ne($r3, $ret_var, $r2, $r3, v_343)*
              field(@this:, <java.util.AbstractList: int modCount>,
                    (numeric_const(1) + _v_1499))*
              field($r2,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    $r3)*
              field($r2,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    $ret_var)*
              field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r2)*
              field(@this:, <java.util.LinkedList: int size>,
                    (numeric_const(1) + (numeric_const(1) + length(empty()))))
              |  |    |-  |  



====================Start rewrites======================Using rule:
length_cons_empty gives r_4902 = numeric_const(1)  
equal to r_4903 = (numeric_const(1) + length(empty())) = length(v_343) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, empty())  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4902 = numeric_const(1) = (numeric_const(1) + length(empty())) =
 length(v_343)  * r_4910 = $ret_var = _v_1496  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, $r2, $r3, v_343)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r3)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + numeric_const(1)))
 |  |    |-  |  


====================Start rewrites======================Using rule:
length_empty gives r_5143 = numeric_const(0)  
equal to r_4900 = length(empty()) 
.
Rewritten to
 r_4888 = v_343 = cons(r_4894, empty())  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4902 = numeric_const(1) = (numeric_const(1) + numeric_const(0)) =
 length(v_343)  * r_4910 = $ret_var = _v_1496  *
 r_5143 = numeric_const(0) = length(empty())  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, $r2, $r3, v_343)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r3)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + numeric_const(1)))
 |  |    |-  |  


====================Start rewrites======================Rewritten to
 r_4888 = v_343 = cons(r_4894, empty())  * r_4890 = @parameter0: = r1  *
 r_4891 = @this: = r0  *
 r_4902 = numeric_const(1) = (numeric_const(1) + numeric_const(0)) =
 length(v_343)  * r_4910 = $ret_var = _v_1496  *
 r_5143 = numeric_const(0) = length(empty())  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, $r2, $r3, v_343)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r3)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + numeric_const(1)))
 |  |    |-  |  


====================Start rewrites=======================================Finished rewrites====================

------------>r_5120 = $ret_var = _v_1496  *
             r_5121 = (numeric_const(1) + length(r_5126)) = length(v_343)  *
             r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
             r_5132 = v_343 = cons(r_5128, r_5126)  
             field(@this:, <java.util.AbstractList: int modCount>,
                   (numeric_const(1) + _v_1499))*
             field($r2,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   r_5133)*
             field($r2,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   $ret_var)*
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   $r2)*
             field(@this:, <java.util.LinkedList: int size>,
                   (numeric_const(1) + (numeric_const(1) + length(r_5126))))
             | 
               | dseg_ne($ret_var, $r2, $r3, $ret_var,
                         cons(@parameter0:, empty())) *
                 dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty())) *
                 dseg_ne(r_5127, $r3, $r2, r_5133, r_5126)
                
             |- 
                | dseg_ne($ret_var, $r2, $r2, r_5133,
                          cons(@parameter0:, v_343))
                

Rule: dseg_app_rollup_left3

Foo

====================Start rewrites======================Using rule: app_cons
gives
r_5147 = cons(@parameter0:, app(empty(), app(cons(r_5128, empty()), r_5126))) 

equal to r_5145
         = app(cons(@parameter0:, empty()),
           app(cons(r_5128, empty()), r_5126))
         
.
Rewritten to
 r_5120 = $ret_var = _v_1496  *
 r_5121 = (numeric_const(1) + length(r_5126)) = length(v_343)  *
 r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
 r_5132 = v_343 = cons(r_5128, r_5126)  *
 r_5147
 = cons(@parameter0:, app(empty(), app(cons(r_5128, empty()), r_5126))) =
 app(cons(@parameter0:, empty()), app(cons(r_5128, empty()), r_5126))  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty()))*
 dseg_ne(r_5127, $r3, $r2, r_5133, r_5126)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_5133)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + (numeric_const(1) + length(r_5126))))
 |  |   
 |- cons(@parameter0:, v_343) = cons(@parameter0:,
                                app(empty(),
                                app(cons(r_5128, empty()), r_5126)))
    |  


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule: app_cons
gives r_5149 = cons(r_5128, app(empty(), r_5126))  
equal to r_5144 = app(cons(r_5128, empty()), r_5126) 
.
Rewritten to
 r_5120 = $ret_var = _v_1496  *
 r_5121 = (numeric_const(1) + length(r_5126)) = length(v_343)  *
 r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
 r_5132 = v_343 = cons(r_5128, r_5126)  *
 r_5149 = cons(r_5128, app(empty(), r_5126)) =
 app(cons(r_5128, empty()), r_5126)  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty()))*
 dseg_ne(r_5127, $r3, $r2, r_5133, r_5126)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_5133)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + (numeric_const(1) + length(r_5126))))
 |  |   
 |- cons(@parameter0:, v_343) = cons(@parameter0:,
                                app(empty(),
                                cons(r_5128, app(empty(), r_5126))))
    |  


====================Start rewrites======================Using rule:
app_empty_first gives
r_5149 = cons(r_5128, app(empty(), r_5126)) =
app(cons(r_5128, empty()), r_5126)  
equal to r_5146 = app(empty(), cons(r_5128, app(empty(), r_5126))) 
.
Rewritten to
 r_5120 = $ret_var = _v_1496  *
 r_5121 = (numeric_const(1) + length(r_5126)) = length(v_343)  *
 r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
 r_5132 = v_343 = cons(r_5128, r_5126)  *
 r_5149 = cons(r_5128, app(empty(), r_5126)) =
 app(cons(r_5128, empty()), r_5126) =
 app(empty(), cons(r_5128, app(empty(), r_5126)))  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty()))*
 dseg_ne(r_5127, $r3, $r2, r_5133, r_5126)*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_5133)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + (numeric_const(1) + length(r_5126))))
 |  |   
 |- cons(@parameter0:, v_343) = cons(@parameter0:,
                                cons(r_5128, app(empty(), r_5126)))
    |  


====================Start rewrites=======================================Finished rewrites====================

------------->r_5120 = $ret_var = _v_1496  *
              r_5121 = (numeric_const(1) + length(r_5126)) = length(v_343)  *
              r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
              r_5132 = v_343 = cons(r_5128, r_5126)  
              dseg_ne($ret_var, $r2, $r3, $ret_var,
                      cons(@parameter0:, empty()))*
              dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty()))*
              dseg_ne(r_5127, $r3, $r2, r_5133, r_5126)*
              field(@this:, <java.util.AbstractList: int modCount>,
                    (numeric_const(1) + _v_1499))*
              field($r2,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    r_5133)*
              field($r2,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    $ret_var)*
              field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r2)*
              field(@this:, <java.util.LinkedList: int size>,
                    (numeric_const(1) + (numeric_const(1) + length(r_5126))))
              |  |   
              |- cons(@parameter0:, v_343) = cons(@parameter0:,
                                             cons(r_5128,
                                             app(empty(), r_5126)))
                 |  

Rule: cons_inj_right

Foo

====================Start rewrites======================Using rule:
app_empty_first gives r_5126 equal to r_5148 = app(empty(), r_5126) 
.
Rewritten to
 r_5120 = $ret_var = _v_1496  *
 r_5121 = (numeric_const(1) + length(app(empty(), r_5126))) = length(v_343)  *
 r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
 r_5132 = v_343 = cons(r_5128, app(empty(), r_5126))  
 dseg_ne($ret_var, $r2, $r3, $ret_var, cons(@parameter0:, empty()))*
 dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty()))*
 dseg_ne(r_5127, $r3, $r2, r_5133, app(empty(), r_5126))*
 field(@this:, <java.util.AbstractList: int modCount>,
       (numeric_const(1) + _v_1499))*
 field($r2,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_5133)*
 field($r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $ret_var)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + (numeric_const(1) + length(app(empty(), r_5126)))))
 |  |    |- v_343 = v_343 |  


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------------->r_5120 = $ret_var = _v_1496  *
               r_5121 = (numeric_const(1) + length(r_5126)) = length(v_343)  *
               r_5129 = @this: = r0  * r_5130 = @parameter0: = r1  *
               r_5132 = v_343 = cons(r_5128, r_5126)  
               dseg_ne($ret_var, $r2, $r3, $ret_var,
                       cons(@parameter0:, empty()))*
               dseg_ne($r3, $ret_var, r_5127, $r3, cons(r_5128, empty()))*
               dseg_ne(r_5127, $r3, $r2, r_5133, r_5126)*
               field(@this:, <java.util.AbstractList: int modCount>,
                     (numeric_const(1) + _v_1499))*
               field($r2,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                     r_5133)*
               field($r2,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                     $ret_var)*
               field(@this:,
                     <java.util.LinkedList: java.util.LinkedList$Entry header>,
                     $r2)*
               field(@this:, <java.util.LinkedList: int size>,
                     (numeric_const(1) + (numeric_const(1) + length(r_5126))))
               |  |    |-  |  



====================Start rewrites=======================================Finished rewrites====================

End time :2.264140 

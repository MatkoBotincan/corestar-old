Goal
r_3953 = v_295 = **second**  * r_3956 = numeric_const(0) = length(empty())  *
r_3958 = (numeric_const(1) + (length(r_3978) + numeric_const(1))) =
length(v_293)  * r_3970 = @this: = r0  *
r_3973 = v_294 = app(r_3978, cons(r_3976, empty()))  *
r_3982 = app(r_3978, cons(r_3976, cons(v_292, empty()))) = v_293  *
r_3987 = (length(r_3978) + numeric_const(1)) = length(v_294)  *
r_3988 = numeric_const(1) = length(cons(v_292, empty())) =
length(cons(r_3976, empty()))  * r_3994 = $r3 = $ret_var   
| 
  | field(_v_1232,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_3977) *
    field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
          r_3976) *
    field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_3965)
  (v_295 = **first** * $r3 = nil()
  | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r1)
  )
  || (v_295 = v_295 * $r3 = v_292
     | field(@this:, <java.util.LinkedList: int modCount>,
             (_v_1234 + numeric_const(1))) *
       node($r2, nil(), nil(), nil()) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             _v_1232) *
       field(_v_1232,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $r1) *
       field(@this:, <java.util.LinkedList: int size>,
             builtin_minus((numeric_const(1) +
                           (length(r_3978) + numeric_const(1))),
             numeric_const(1))) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
     )*
  (r_3978 = empty() * r_3965 = _v_1232 * r_3977 = $r1 |  )
  || ( | dseg_ne(r_3965, $r1, _v_1232, r_3977, r_3978) ) 
|- v_295 = r_4387 * **first** = r_4386 * empty() = r_4385 *
   {list=r_4385} = r_4384 * @this: = r_4383 * v_295 = r_4382 *
   v_294 = r_4381 * {list=r_4381} = r_4380 * $r3 = r_4379 * v_292 = r_4378 | 
    (r_4387 = r_4386 | LinkedList$java.util.LinkedList(r_4383, r_4384) )
    || (r_4379 = r_4378 * r_4387 = r_4382
       | LinkedList$java.util.LinkedList(r_4383, r_4380) )

Start time :1.800111 
Foo

====================Start rewrites======================Using rule:
minus_plus_first gives
r_3987 = (length(r_3978) + numeric_const(1)) = length(v_294)  
equal to r_3997
         = builtin_minus((numeric_const(1) +
                         (length(r_3978) + numeric_const(1))),
           numeric_const(1))
         
.
Rewritten to
 r_3953 = v_295 = **second**  *
 r_3956 = numeric_const(0) = length(empty())  *
 r_3958 = (numeric_const(1) + (length(r_3978) + numeric_const(1))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3973 = v_294 = app(r_3978, cons(r_3976, empty()))  *
 r_3982 = app(r_3978, cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3987 = (length(r_3978) + numeric_const(1)) = length(v_294) =
 builtin_minus((numeric_const(1) + (length(r_3978) + numeric_const(1))),
 numeric_const(1))  *
 r_3988 = numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_3976, empty()))  * r_3994 = $r3 = $ret_var   
 | 
   | field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_3977) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_3965)
   (r_3978 = empty() * r_3965 = _v_1232 * r_3977 = $r1 |  )
   || ( | dseg_ne(r_3965, $r1, _v_1232, r_3977, r_3978) )*
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              (_v_1234 + numeric_const(1))) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (length(r_3978) + numeric_const(1))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |- v_292 = v_292 * $r3 = $r3 * {list=v_294} = {list=v_294} * v_294 = v_294 *
    v_295 = v_295 * @this: = @this: * {list=empty()} = {list=empty()} *
    empty() = empty() * **first** = **first** * v_295 = v_295 | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule:
plus_reorder_numeric_const_second gives
r_4390 = (numeric_const(1) + _v_1234)  
equal to r_3999 = (_v_1234 + numeric_const(1)) 
.
Rewritten to
 r_3953 = v_295 = **second**  *
 r_3956 = numeric_const(0) = length(empty())  *
 r_3958 = (numeric_const(1) + (length(r_3978) + numeric_const(1))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3973 = v_294 = app(r_3978, cons(r_3976, empty()))  *
 r_3982 = app(r_3978, cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3987 = (length(r_3978) + numeric_const(1)) = length(v_294)  *
 r_3988 = numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_3976, empty()))  * r_3994 = $r3 = $ret_var  *
 r_4390 = (numeric_const(1) + _v_1234) = (_v_1234 + numeric_const(1))   
  | 
    | field(_v_1232,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_3977) *
      field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
            r_3976) *
      field($r1,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_3965)
    (v_295 = **first** * $r3 = nil()
    | field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
    )
    || (v_295 = v_295 * $r3 = v_292
       | field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_1234)) *
         node($r2, nil(), nil(), nil()) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               _v_1232) *
         field(_v_1232,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $r1) *
         field(@this:, <java.util.LinkedList: int size>,
               (length(r_3978) + numeric_const(1))) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
       )*
    (r_3978 = empty() * r_3965 = _v_1232 * r_3977 = $r1 |  )
    || ( | dseg_ne(r_3965, $r1, _v_1232, r_3977, r_3978) ) 
 |- v_292 = v_292 * $r3 = $r3 * {list=v_294} = {list=v_294} * v_294 = v_294 *
    v_295 = v_295 * @this: = @this: * {list=empty()} = {list=empty()} *
    empty() = empty() * **first** = **first** * v_295 = v_295 | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================

>r_3953 = v_295 = **second**  *
 r_3956 = numeric_const(0) = length(empty())  *
 r_3958 = (numeric_const(1) + (length(r_3978) + numeric_const(1))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3973 = v_294 = app(r_3978, cons(r_3976, empty()))  *
 r_3982 = app(r_3978, cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3987 = (length(r_3978) + numeric_const(1)) = length(v_294)  *
 r_3988 = numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_3976, empty()))  * r_3994 = $r3 = $ret_var   
 | 
   | field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_3965) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_3977)
   (r_3978 = empty() * r_3965 = _v_1232 * r_3977 = $r1 |  )
   || ( | dseg_ne(r_3965, $r1, _v_1232, r_3977, r_3978) )*
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (length(r_3978) + numeric_const(1))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )



====================Start rewrites======================Using rule:
length_cons gives r_4391 = (numeric_const(1) + numeric_const(0))  
equal to r_3988 = numeric_const(1) = length(cons(v_292, empty())) =
         length(cons(r_3976, empty())) 
.
Rewritten to
 r_3953 = v_295 = **second**  *
 r_3956 = numeric_const(0) = length(empty())  *
 r_3958
 = ((r_4391 + numeric_const(0)) +
   (length(r_3978) + (r_4391 + numeric_const(0)))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3973 = v_294 = app(r_3978, cons(r_3976, empty()))  *
 r_3982 = app(r_3978, cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3987 = (length(r_3978) + (r_4391 + numeric_const(0))) = length(v_294)  *
 r_3994 = $r3 = $ret_var  *
 r_4391 = ((r_4391 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_3976, empty()))   
 | 
   | field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_3965) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_3977)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4391 + numeric_const(0)) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (length(r_3978) + (r_4391 + numeric_const(0)))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      )*
   (r_3978 = empty() * r_3965 = _v_1232 * r_3977 = $r1 |  )
   || ( | dseg_ne(r_3965, $r1, _v_1232, r_3977, r_3978) ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites======================Using rule:
plus_reorder_numeric_const_second gives
r_4392 = ((r_4391 + numeric_const(0)) + length(r_3978))  
equal to r_3987 = (length(r_3978) + (r_4391 + numeric_const(0))) =
         length(v_294) 
.
Rewritten to
 r_3953 = v_295 = **second**  *
 r_3956 = numeric_const(0) = length(empty())  *
 r_3958
 = ((r_4391 + numeric_const(0)) +
   ((r_4391 + numeric_const(0)) + length(r_3978))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3973 = v_294 = app(r_3978, cons(r_3976, empty()))  *
 r_3982 = app(r_3978, cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3994 = $r3 = $ret_var  *
 r_4391 = ((r_4391 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_3976, empty()))  *
 r_4392 = ((r_4391 + numeric_const(0)) + length(r_3978)) =
 (length(r_3978) + (r_4391 + numeric_const(0))) = length(v_294)   
 | 
   | field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_3965) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_3977)
   (r_3978 = empty() * r_3965 = _v_1232 * r_3977 = $r1 |  )
   || ( | dseg_ne(r_3965, $r1, _v_1232, r_3977, r_3978) )*
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4391 + numeric_const(0)) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              ((r_4391 + numeric_const(0)) + length(r_3978))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : r_3978 = empty() * r_3965 = _v_1232 *
r_3977 = $r1


====================Start rewrites======================Using rule:
app_empty_first gives r_3979 = cons(r_3976, empty())  
equal to r_3973 = v_294 = app(empty(), cons(r_3976, empty())) 
.
Rewritten to
 r_3953 = v_295 = **second**  *
 r_3958 = ((r_4392 + length(empty())) + (r_4392 + length(empty()))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3979 = cons(r_3976, empty()) = v_294 = app(empty(), v_294)  *
 r_3982 = app(empty(), cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3986 = length(empty()) = numeric_const(0)  * r_3994 = $r3 = $ret_var  *
 r_4392 = ((r_4392 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons(v_292, empty())) = length(v_294)   
 | 
   | field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4392 + length(empty())) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (r_4392 + length(empty()))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Rewritten to
 r_4393 = ((r_4394 + numeric_const(0)) + length(r_4406)) = length(v_294)  *
 r_4394 = ((r_4394 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_4408, empty()))  * r_4401 = $r3 = $ret_var  *
 r_4404 = app(r_4406, cons(r_4408, cons(v_292, empty()))) = v_293  *
 r_4410 = v_294 = app(r_4406, cons(r_4408, empty()))  *
 r_4413 = @this: = r0  *
 r_4422
 = ((r_4394 + numeric_const(0)) +
   ((r_4394 + numeric_const(0)) + length(r_4406))) =
 length(v_293)  * r_4424 = numeric_const(0) = length(empty())  *
 r_4426 = v_295 = **second**   
 | 
   | dseg_ne(r_4417, $r1, _v_1232, r_4407, r_4406) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4417) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_4408) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_4407)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4394 + numeric_const(0)) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              ((r_4394 + numeric_const(0)) + length(r_4406))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Rewritten to
 r_3953 = v_295 = **second**  *
 r_3958 = ((r_4392 + length(empty())) + (r_4392 + length(empty()))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3979 = cons(r_3976, empty()) = v_294  *
 r_3982 = app(empty(), cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3986 = length(empty()) = numeric_const(0)  * r_3994 = $r3 = $ret_var  *
 r_4392 = ((r_4392 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons(v_292, empty())) = length(v_294)   
 | 
   | field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4392 + length(empty())) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (r_4392 + length(empty()))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_3953 = v_295 = **second**  *
  r_3958 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
  r_3970 = @this: = r0  * r_3979 = cons(r_3976, empty()) = v_294  *
  r_3982 = app(empty(), cons(r_3976, cons(v_292, empty()))) = v_293  *
  r_3986 = length(empty()) = numeric_const(0)  * r_3994 = $r3 = $ret_var  *
  r_4392 = numeric_const(1) = length(cons(v_292, empty())) = length(v_294)   
   | 
     | field(_v_1232,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             $r1) *
       field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
             r_3976) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             _v_1232)
     (v_295 = **first** * $r3 = nil()
     | field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
     )
     || (v_295 = v_295 * $r3 = v_292
        | field(@this:, <java.util.LinkedList: int modCount>,
                (numeric_const(1) + _v_1234)) *
          node($r2, nil(), nil(), nil()) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                _v_1232) *
          field(_v_1232,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $r1) *
          field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r1)
        ) 
  |-  | 
     (v_295 = **first**
     | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
     || ($r3 = v_292 * v_295 = v_295
        | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )



====================Start rewrites======================Using rule:
length_cons gives r_4429 = (numeric_const(1) + length(empty()))  
equal to r_4392 = numeric_const(1) = length(cons(v_292, empty())) =
         length(v_294) 
.
Rewritten to
 r_3953 = v_295 = **second**  *
 r_3958 = ((r_4429 + length(empty())) + (r_4429 + length(empty()))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3979 = cons(r_3976, empty()) = v_294  *
 r_3982 = app(empty(), cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3986 = length(empty()) = numeric_const(0)  * r_3994 = $r3 = $ret_var  *
 r_4429 = ((r_4429 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons(v_292, empty())) = length(v_294)   
 | 
   | field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4429 + length(empty())) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (r_4429 + length(empty()))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites======================Rewritten to
 r_3953 = v_295 = **second**  *
 r_3958 = ((r_4429 + length(empty())) + (r_4429 + length(empty()))) =
 length(v_293)  * r_3970 = @this: = r0  *
 r_3979 = cons(r_3976, empty()) = v_294  *
 r_3982 = app(empty(), cons(r_3976, cons(v_292, empty()))) = v_293  *
 r_3986 = length(empty()) = numeric_const(0)  * r_3994 = $r3 = $ret_var  *
 r_4429 = ((r_4429 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons(v_292, empty())) = length(v_294)   
 | 
   | field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_3976) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4429 + length(empty())) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              (r_4429 + length(empty()))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : v_295 = v_295 * $r3 = v_292
Elim eqs : v_295 = **first** *
$r3 = nil()
Success : r_3953 = v_295 = **second**  *
          r_3958 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
          r_3970 = @this: = r0  * r_3979 = cons(r_3976, empty()) = v_294  *
          r_3982 = app(empty(), cons(r_3976, cons(v_292, empty()))) = v_293  *
          r_3986 = length(empty()) = numeric_const(0)  *
          r_3994 = $r3 = $ret_var  *
          r_4429 = numeric_const(1) = length(cons(v_292, empty())) =
          length(v_294)   
          | v_295 = **first** * $r3 = nil()
            | field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r1) *
              field(_v_1232,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    $r1) *
              field(_v_1232,
                    <java.util.LinkedList$Entry: java.lang.Object element>,
                    r_3976) *
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    _v_1232)
             
          |-  | 
             (v_295 = **first**
             | LinkedList$java.util.LinkedList(@this:, {list=empty()}) 
             )
             || ($r3 = v_292 * v_295 = v_295
                | LinkedList$java.util.LinkedList(@this:, {list=v_294}) 
                )


====================Start rewrites======================Using rule:
app_empty_first gives r_4439 = cons(r_4444, cons($r3, empty()))  
equal to r_4440 = app(empty(), cons(r_4444, cons($r3, empty()))) = v_293 
.
Rewritten to
 r_4430 = numeric_const(1) = length(cons($r3, empty())) = length(v_294)  *
 r_4437 = $r3 = $ret_var = v_292  *
 r_4438 = length(empty()) = numeric_const(0)  *
 r_4439 = cons(r_4444, cons($r3, empty())) = app(empty(), v_293) = v_293  *
 r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
 r_4455 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
 r_4458 = v_295 = **second**   
 | 
   | field(@this:, <java.util.LinkedList: int modCount>,
           (numeric_const(1) + _v_1234)) *
     node($r2, nil(), nil(), nil()) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, $r1) *
     field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_4444) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232)
    
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = $r3 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_4430 = numeric_const(1) = length(cons($r3, empty())) = length(v_294)  *
   r_4437 = $r3 = $ret_var = v_292  *
   r_4438 = length(empty()) = numeric_const(0)  *
   r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
   r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
   r_4455 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
   r_4458 = v_295 = **second**   
   | 
     | field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             _v_1232) *
       field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
             r_4444) *
       field(_v_1232,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             $r1) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
       field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
       field(_v_1232,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $r1) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             _v_1232) *
       node($r2, nil(), nil(), nil()) *
       field(@this:, <java.util.LinkedList: int modCount>,
             (numeric_const(1) + _v_1234))
      
   |-  | 
      (v_295 = **first**
      | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
      || ($r3 = $r3 * v_295 = v_295
         | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )

Rule: node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_4430 = numeric_const(1) = length(cons($r3, empty())) = length(v_294)  *
    r_4437 = $r3 = $ret_var = v_292  *
    r_4438 = length(empty()) = numeric_const(0)  *
    r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
    r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
    r_4455 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
    r_4458 = v_295 = **second**   
    | 
      | field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              _v_1232) *
        node(_v_1232, $r1, $r1, r_4444)
       
    |-  | 
       (v_295 = **first**
       | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
       || ($r3 = $r3 * v_295 = v_295
          | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_4430 = numeric_const(1) = length(cons($r3, empty())) = length(v_294)  *
     r_4437 = $r3 = $ret_var = v_292  *
     r_4438 = length(empty()) = numeric_const(0)  *
     r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
     r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
     r_4455 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
     r_4458 = v_295 = **second**   
     | 
       | node(_v_1232, $r1, $r1, r_4444) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               _v_1232) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
         field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               _v_1232) *
         field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_1234)) *
         dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
        
     |-  | 
        (v_295 = **first**
        | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
        || ($r3 = $r3 * v_295 = v_295
           | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_4430 = numeric_const(1) = length(cons($r3, empty())) = length(v_294)  *
      r_4437 = $r3 = $ret_var = v_292  *
      r_4438 = length(empty()) = numeric_const(0)  *
      r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
      r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
      r_4455 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
      r_4458 = v_295 = **second**   
      | 
        | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
          field(@this:, <java.util.LinkedList: int modCount>,
                (numeric_const(1) + _v_1234)) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                _v_1232) *
          field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r1) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                _v_1232) *
          dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)
         
      |-  | 
         (v_295 = **first**
         | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
         || ($r3 = $r3 * v_295 = v_295
            | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )



====================Start rewrites======================Using rule:
length_cons gives r_4461 = (numeric_const(1) + length(empty()))  
equal to r_4430 = numeric_const(1) = length(cons($r3, empty())) =
         length(v_294) 
.
Rewritten to
 r_4437 = $r3 = $ret_var = v_292  *
 r_4438 = length(empty()) = numeric_const(0)  *
 r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
 r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
 r_4455 = ((r_4461 + length(empty())) + (r_4461 + length(empty()))) =
 length(v_293)  * r_4458 = v_295 = **second**  *
 r_4461 = ((r_4461 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons($r3, empty())) = length(v_294)   
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4461 + length(empty())) + _v_1234)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int size>,
           (r_4461 + length(empty()))) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232) *
     dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)
    
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = $r3 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites======================Rewritten to
 r_4437 = $r3 = $ret_var = v_292  *
 r_4438 = length(empty()) = numeric_const(0)  *
 r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
 r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
 r_4455 = ((r_4461 + length(empty())) + (r_4461 + length(empty()))) =
 length(v_293)  * r_4458 = v_295 = **second**  *
 r_4461 = ((r_4461 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons($r3, empty())) = length(v_294)   
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4461 + length(empty())) + _v_1234)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int size>,
           (r_4461 + length(empty()))) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232) *
     dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)
    
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = $r3 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_4437 = $r3 = $ret_var = v_292  *
       r_4438 = length(empty()) = numeric_const(0)  *
       r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
       r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
       r_4455 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
       r_4458 = v_295 = **second**  *
       r_4461 = numeric_const(1) = length(cons($r3, empty())) = length(v_294) 
         | 
           | dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294) *
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   _v_1232) *
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   $r1) *
             field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   _v_1232) *
             field(@this:, <java.util.LinkedList: int modCount>,
                   (numeric_const(1) + _v_1234)) *
             dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
            
       |-  |  False



====================Start rewrites======================Using rule:
length_cons gives r_4488 = (numeric_const(1) + length(empty()))  
equal to r_4461 = numeric_const(1) = length(cons($r3, empty())) =
         length(v_294) 
.
Rewritten to
 r_4437 = $r3 = $ret_var = v_292  *
 r_4438 = length(empty()) = numeric_const(0)  *
 r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
 r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
 r_4455 = ((r_4488 + length(empty())) + (r_4488 + length(empty()))) =
 length(v_293)  * r_4458 = v_295 = **second**  *
 r_4488 = ((r_4488 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons($r3, empty())) = length(v_294)   
 | 
   | dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int size>,
           (r_4488 + length(empty()))) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4488 + length(empty())) + _v_1234)) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
    
 |-  |  False


====================Start rewrites======================Rewritten to
 r_4437 = $r3 = $ret_var = v_292  *
 r_4438 = length(empty()) = numeric_const(0)  *
 r_4439 = cons(r_4444, cons($r3, empty())) = v_293  *
 r_4441 = cons(r_4444, empty()) = v_294  * r_4448 = @this: = r0  *
 r_4455 = ((r_4488 + length(empty())) + (r_4488 + length(empty()))) =
 length(v_293)  * r_4458 = v_295 = **second**  *
 r_4488 = ((r_4488 + length(empty())) + length(empty())) = numeric_const(1) =
 length(cons($r3, empty())) = length(v_294)   
 | 
   | dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int size>,
           (r_4488 + length(empty()))) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4488 + length(empty())) + _v_1234)) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
    
 |-  |  False


====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_4462 = numeric_const(1) = length(cons($r3, empty())) = length(v_294) 
       * r_4464 = v_295 = **second**  *
       r_4467 = (numeric_const(1) + numeric_const(1)) = length(v_293)  *
       r_4474 = @this: = r0  * r_4480 = cons(r_4477, empty()) = v_294  *
       r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
       r_4482 = length(empty()) = numeric_const(0)  *
       r_4483 = $r3 = $ret_var = v_292   
       | 
         | dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 _v_1232) *
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1) *
           field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 _v_1232) *
           field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_1234)) *
           dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
          
       |-  | LinkedList$java.util.LinkedList(@this:, {list=v_294}) 

Rule: apf_body_right_LinkedList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_4464 = v_295 = **second**  *
        r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
        r_4474 = @this: = r0  *
        r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
        r_4482 = length(empty()) = numeric_const(0)  *
        r_4483 = $r3 = $ret_var = v_292  *
        r_4489 = cons(r_4477, empty()) = v_294  *
        r_4497 = length(v_294) = numeric_const(1) =
        length(cons($r3, empty()))  
        field(@this:, <java.util.LinkedList: int size>, length(v_294))
        | 
          | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
            field(@this:, <java.util.LinkedList: int modCount>,
                  (length(v_294) + _v_1234)) *
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  _v_1232) *
            field(@this:,
                  <java.util.LinkedList: java.util.LinkedList$Entry header>,
                  $r1) *
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                  _v_1232) *
            dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)
           
        |- 
           | AbstractSequentialList$java.util.AbstractSequentialList(
             @this:, {modCount=r_4495}) *
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   r_4492) *
             field(r_4492,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   r_4493) *
             field(r_4492,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   r_4491) *
             dseg(r_4493, r_4492, r_4492, r_4491, v_294)
           

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------->r_4464 = v_295 = **second**  *
         r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
         r_4474 = @this: = r0  *
         r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
         r_4482 = length(empty()) = numeric_const(0)  *
         r_4483 = $r3 = $ret_var = v_292  *
         r_4489 = cons(r_4477, empty()) = v_294  *
         r_4497 = length(v_294) = numeric_const(1) =
         length(cons($r3, empty()))  
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
         field(@this:, <java.util.LinkedList: int size>, length(v_294))
         | 
           | dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294) *
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   _v_1232) *
             dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
             field(@this:, <java.util.LinkedList: int modCount>,
                   (length(v_294) + _v_1234)) *
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   _v_1232)
            
         |- 
            | AbstractSequentialList$java.util.AbstractSequentialList(
              @this:, {modCount=r_4495}) *
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    r_4493) *
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    r_4491) *
              dseg(r_4493, $r1, $r1, r_4491, v_294)
            

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------->r_4464 = v_295 = **second**  *
          r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
          r_4474 = @this: = r0  *
          r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
          r_4482 = length(empty()) = numeric_const(0)  *
          r_4483 = $r3 = $ret_var = v_292  *
          r_4489 = cons(r_4477, empty()) = v_294  *
          r_4497 = length(v_294) = numeric_const(1) =
          length(cons($r3, empty()))  
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                _v_1232)*
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r1)*
          field(@this:, <java.util.LinkedList: int size>, length(v_294))
          | 
            | field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    _v_1232) *
              field(@this:, <java.util.LinkedList: int modCount>,
                    (length(v_294) + _v_1234)) *
              dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
              dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)
             
          |- 
             | AbstractSequentialList$java.util.AbstractSequentialList(
               @this:, {modCount=r_4495}) *
               field($r1,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                     r_4491) *
               dseg(_v_1232, $r1, $r1, r_4491, v_294)
             

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---------->r_4464 = v_295 = **second**  *
           r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
           r_4474 = @this: = r0  *
           r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
           r_4482 = length(empty()) = numeric_const(0)  *
           r_4483 = $r3 = $ret_var = v_292  *
           r_4489 = cons(r_4477, empty()) = v_294  *
           r_4497 = length(v_294) = numeric_const(1) =
           length(cons($r3, empty()))  
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 _v_1232)*
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 _v_1232)*
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1)*
           field(@this:, <java.util.LinkedList: int size>, length(v_294))
           | 
             | dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294) *
               dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
               field(@this:, <java.util.LinkedList: int modCount>,
                     (length(v_294) + _v_1234))
              
           |- 
              | AbstractSequentialList$java.util.AbstractSequentialList(
                @this:, {modCount=r_4495}) *
                dseg(_v_1232, $r1, $r1, _v_1232, v_294)
              

Rule: dseg_non_empty3_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----------->r_4464 = v_295 = **second**  *
            r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
            r_4474 = @this: = r0  *
            r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
            r_4482 = length(empty()) = numeric_const(0)  *
            r_4483 = $r3 = $ret_var = v_292  *
            r_4489 = cons(r_4477, empty()) = v_294  *
            r_4497 = length(v_294) = numeric_const(1) =
            length(cons($r3, empty()))  
            dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)*
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  _v_1232)*
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                  _v_1232)*
            field(@this:,
                  <java.util.LinkedList: java.util.LinkedList$Entry header>,
                  $r1)*
            field(@this:, <java.util.LinkedList: int size>, length(v_294))
            | 
              | field(@this:, <java.util.LinkedList: int modCount>,
                      (length(v_294) + _v_1234)) *
                dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
               
            |- 
               | AbstractSequentialList$java.util.AbstractSequentialList(
                 @this:, {modCount=r_4495})
               

Rule: apf_body_right_AbstractSequentialList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------------>r_4464 = v_295 = **second**  *
             r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
             r_4474 = @this: = r0  *
             r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
             r_4482 = length(empty()) = numeric_const(0)  *
             r_4483 = $r3 = $ret_var = v_292  *
             r_4489 = cons(r_4477, empty()) = v_294  *
             r_4497 = length(v_294) = numeric_const(1) =
             length(cons($r3, empty()))  
             dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)*
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   _v_1232)*
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   _v_1232)*
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   $r1)*
             field(@this:, <java.util.LinkedList: int size>, length(v_294))
             | 
               | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                 field(@this:, <java.util.LinkedList: int modCount>,
                       (length(v_294) + _v_1234))
                
             |- 
                | AbstractList$java.util.AbstractList(@this:,
                                                      {modCount=r_4498})
                

Rule: apf_body_right_AbstractList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------------->r_4464 = v_295 = **second**  *
              r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
              r_4474 = @this: = r0  *
              r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
              r_4482 = length(empty()) = numeric_const(0)  *
              r_4483 = $r3 = $ret_var = v_292  *
              r_4489 = cons(r_4477, empty()) = v_294  *
              r_4497 = length(v_294) = numeric_const(1) =
              length(cons($r3, empty()))  
              dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)*
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    _v_1232)*
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    _v_1232)*
              field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r1)*
              field(@this:, <java.util.LinkedList: int size>, length(v_294))
              | 
                | field(@this:, <java.util.LinkedList: int modCount>,
                        (length(v_294) + _v_1234)) *
                  dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
                 
              |- 
                 | field(@this:, <java.util.AbstractList: int modCount>,
                         r_4500)
                 

Rule: inherit_modcount2

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------------->r_4464 = v_295 = **second**  *
               r_4467 = (length(v_294) + length(v_294)) = length(v_293)  *
               r_4474 = @this: = r0  *
               r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
               r_4482 = length(empty()) = numeric_const(0)  *
               r_4483 = $r3 = $ret_var = v_292  *
               r_4489 = cons(r_4477, empty()) = v_294  *
               r_4497 = length(v_294) = numeric_const(1) =
               length(cons($r3, empty()))  
               field(@this:, <java.util.AbstractList: int modCount>,
                     (length(v_294) + _v_1234))*
               dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)*
               field($r1,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                     _v_1232)*
               field($r1,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                     _v_1232)*
               field(@this:,
                     <java.util.LinkedList: java.util.LinkedList$Entry header>,
                     $r1)*
               field(@this:, <java.util.LinkedList: int size>, length(v_294))
               |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))  
               |-  |  



====================Start rewrites======================Using rule:
length_cons gives r_4503 = (length(v_294) + length(empty()))  
equal to r_4497 = length(v_294) = numeric_const(1) =
         length(cons($r3, empty())) 
.
Rewritten to
 r_4464 = v_295 = **second**  *
 r_4467 = ((r_4503 + length(empty())) + (r_4503 + length(empty()))) =
 length(v_293)  * r_4474 = @this: = r0  *
 r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
 r_4482 = length(empty()) = numeric_const(0)  *
 r_4483 = $r3 = $ret_var = v_292  * r_4489 = cons(r_4477, empty()) = v_294  *
 r_4503 = ((r_4503 + length(empty())) + length(empty())) = length(v_294) =
 numeric_const(1) = length(cons($r3, empty()))  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4503 + length(empty())) + _v_1234))*
 dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       _v_1232)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, (r_4503 + length(empty())))
 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))   |-  |  


====================Start rewrites======================Rewritten to
 r_4464 = v_295 = **second**  *
 r_4467 = ((r_4503 + length(empty())) + (r_4503 + length(empty()))) =
 length(v_293)  * r_4474 = @this: = r0  *
 r_4481 = cons(r_4477, cons($r3, empty())) = v_293  *
 r_4482 = length(empty()) = numeric_const(0)  *
 r_4483 = $r3 = $ret_var = v_292  * r_4489 = cons(r_4477, empty()) = v_294  *
 r_4503 = ((r_4503 + length(empty())) + length(empty())) = length(v_294) =
 numeric_const(1) = length(cons($r3, empty()))  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4503 + length(empty())) + _v_1234))*
 dseg_ne(_v_1232, $r1, $r1, _v_1232, v_294)*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       _v_1232)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, (r_4503 + length(empty())))
 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))   |-  |  


====================Start rewrites=======================================Finished rewrites====================

->r_4393 = (numeric_const(1) + length(r_4406)) = length(v_294)  *
  r_4394 = numeric_const(1) = length(cons(v_292, empty())) =
  length(cons(r_4408, empty()))  * r_4401 = $r3 = $ret_var  *
  r_4404 = app(r_4406, cons(r_4408, cons(v_292, empty()))) = v_293  *
  r_4410 = v_294 = app(r_4406, cons(r_4408, empty()))  *
  r_4413 = @this: = r0  *
  r_4422 = (numeric_const(1) + (numeric_const(1) + length(r_4406))) =
  length(v_293)  * r_4424 = numeric_const(0) = length(empty())  *
  r_4426 = v_295 = **second**   
  | 
    | field(_v_1232,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_4407) *
      field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
            r_4408) *
      field($r1,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_4417) *
      dseg_ne(r_4417, $r1, _v_1232, r_4407, r_4406)
    (v_295 = **first** * $r3 = nil()
    | field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
    )
    || (v_295 = v_295 * $r3 = v_292
       | field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_1234)) *
         node($r2, nil(), nil(), nil()) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               _v_1232) *
         field(_v_1232,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $r1) *
         field(@this:, <java.util.LinkedList: int size>,
               (numeric_const(1) + length(r_4406))) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
       ) 
  |-  | 
     (v_295 = **first**
     | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
     || ($r3 = v_292 * v_295 = v_295
        | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )



====================Start rewrites======================Using rule:
length_cons gives r_4504 = (numeric_const(1) + numeric_const(0))  
equal to r_4394 = numeric_const(1) = length(cons(v_292, empty())) =
         length(cons(r_4408, empty())) 
.
Rewritten to
 r_4393 = ((r_4504 + numeric_const(0)) + length(r_4406)) = length(v_294)  *
 r_4401 = $r3 = $ret_var  *
 r_4404 = app(r_4406, cons(r_4408, cons(v_292, empty()))) = v_293  *
 r_4410 = v_294 = app(r_4406, cons(r_4408, empty()))  *
 r_4413 = @this: = r0  *
 r_4422
 = ((r_4504 + numeric_const(0)) +
   ((r_4504 + numeric_const(0)) + length(r_4406))) =
 length(v_293)  * r_4424 = numeric_const(0) = length(empty())  *
 r_4426 = v_295 = **second**  *
 r_4504 = ((r_4504 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_4408, empty()))   
 | 
   | field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_4407) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_4408) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4417) *
     dseg_ne(r_4417, $r1, _v_1232, r_4407, r_4406)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4504 + numeric_const(0)) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              ((r_4504 + numeric_const(0)) + length(r_4406))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites======================Rewritten to
 r_4393 = ((r_4504 + numeric_const(0)) + length(r_4406)) = length(v_294)  *
 r_4401 = $r3 = $ret_var  *
 r_4404 = app(r_4406, cons(r_4408, cons(v_292, empty()))) = v_293  *
 r_4410 = v_294 = app(r_4406, cons(r_4408, empty()))  *
 r_4413 = @this: = r0  *
 r_4422
 = ((r_4504 + numeric_const(0)) +
   ((r_4504 + numeric_const(0)) + length(r_4406))) =
 length(v_293)  * r_4424 = numeric_const(0) = length(empty())  *
 r_4426 = v_295 = **second**  *
 r_4504 = ((r_4504 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons(v_292, empty())) =
 length(cons(r_4408, empty()))   
 | 
   | field(_v_1232,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_4407) *
     field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
           r_4408) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4417) *
     dseg_ne(r_4417, $r1, _v_1232, r_4407, r_4406)
   (v_295 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_295 = v_295 * $r3 = v_292
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_4504 + numeric_const(0)) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(_v_1232,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>,
              ((r_4504 + numeric_const(0)) + length(r_4406))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = v_292 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : v_295 = v_295 * $r3 = v_292
Elim eqs : v_295 = **first** *
$r3 = nil()
Success : r_4393 = (numeric_const(1) + length(r_4406)) = length(v_294)  *
          r_4401 = $r3 = $ret_var  *
          r_4404 = app(r_4406, cons(r_4408, cons(v_292, empty()))) = v_293  *
          r_4410 = v_294 = app(r_4406, cons(r_4408, empty()))  *
          r_4413 = @this: = r0  *
          r_4422 = (numeric_const(1) + (numeric_const(1) + length(r_4406))) =
          length(v_293)  * r_4424 = numeric_const(0) = length(empty())  *
          r_4426 = v_295 = **second**  *
          r_4504 = numeric_const(1) = length(cons(v_292, empty())) =
          length(cons(r_4408, empty()))   
          | v_295 = **first** * $r3 = nil()
            | field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r1) *
              field(_v_1232,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    r_4407) *
              field(_v_1232,
                    <java.util.LinkedList$Entry: java.lang.Object element>,
                    r_4408) *
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    r_4417) *
              dseg_ne(r_4417, $r1, _v_1232, r_4407, r_4406)
             
          |-  | 
             (v_295 = **first**
             | LinkedList$java.util.LinkedList(@this:, {list=empty()}) 
             )
             || ($r3 = v_292 * v_295 = v_295
                | LinkedList$java.util.LinkedList(@this:, {list=v_294}) 
                )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_4505 = numeric_const(1) = length(cons($r3, empty())) =
   length(cons(r_4526, empty()))  * r_4508 = v_295 = **second**  *
   r_4510 = numeric_const(0) = length(empty())  *
   r_4512 = (numeric_const(1) + (numeric_const(1) + length(r_4528))) =
   length(v_293)  * r_4521 = @this: = r0  *
   r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
   r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
   r_4533 = $r3 = $ret_var = v_292  *
   r_4540 = (numeric_const(1) + length(r_4528)) = length(v_294)   
   | 
     | dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_4517) *
       field(_v_1232, <java.util.LinkedList$Entry: java.lang.Object element>,
             r_4526) *
       field(_v_1232,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_4527) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
       field(@this:, <java.util.LinkedList: int size>,
             (numeric_const(1) + length(r_4528))) *
       field(_v_1232,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $r1) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             _v_1232) *
       node($r2, nil(), nil(), nil()) *
       field(@this:, <java.util.LinkedList: int modCount>,
             (numeric_const(1) + _v_1234))
      
   |-  | 
      (v_295 = **first**
      | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
      || ($r3 = $r3 * v_295 = v_295
         | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )

Rule: node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_4505 = numeric_const(1) = length(cons($r3, empty())) =
    length(cons(r_4526, empty()))  * r_4508 = v_295 = **second**  *
    r_4510 = numeric_const(0) = length(empty())  *
    r_4512 = (numeric_const(1) + (numeric_const(1) + length(r_4528))) =
    length(v_293)  * r_4521 = @this: = r0  *
    r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
    r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
    r_4533 = $r3 = $ret_var = v_292  *
    r_4540 = (numeric_const(1) + length(r_4528)) = length(v_294)   
    | 
      | field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_1234)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              _v_1232) *
        field(@this:, <java.util.LinkedList: int size>,
              (numeric_const(1) + length(r_4528))) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
        dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_4517) *
        node(_v_1232, r_4527, $r1, r_4526)
       
    |-  | 
       (v_295 = **first**
       | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
       || ($r3 = $r3 * v_295 = v_295
          | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_4505 = numeric_const(1) = length(cons($r3, empty())) =
     length(cons(r_4526, empty()))  * r_4508 = v_295 = **second**  *
     r_4510 = numeric_const(0) = length(empty())  *
     r_4512 = (numeric_const(1) + (numeric_const(1) + length(r_4528))) =
     length(v_293)  * r_4521 = @this: = r0  *
     r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
     r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
     r_4533 = $r3 = $ret_var = v_292  *
     r_4540 = (numeric_const(1) + length(r_4528)) = length(v_294)   
     | 
       | node(_v_1232, r_4527, $r1, r_4526) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               r_4517) *
         dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
         field(@this:, <java.util.LinkedList: int size>,
               (numeric_const(1) + length(r_4528))) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               _v_1232) *
         field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_1234)) *
         dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
        
     |-  | 
        (v_295 = **first**
        | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
        || ($r3 = $r3 * v_295 = v_295
           | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_4505 = numeric_const(1) = length(cons($r3, empty())) =
      length(cons(r_4526, empty()))  * r_4508 = v_295 = **second**  *
      r_4510 = numeric_const(0) = length(empty())  *
      r_4512 = (numeric_const(1) + (numeric_const(1) + length(r_4528))) =
      length(v_293)  * r_4521 = @this: = r0  *
      r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
      r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
      r_4533 = $r3 = $ret_var = v_292  *
      r_4540 = (numeric_const(1) + length(r_4528)) = length(v_294)   
       | 
         | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
           field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_1234)) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 _v_1232) *
           field(@this:, <java.util.LinkedList: int size>,
                 (numeric_const(1) + length(r_4528))) *
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1) *
           dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 r_4517) *
           dseg_ne(_v_1232, r_4527, $r1, _v_1232, cons(r_4526, empty()))
          
      |-  | 
         (v_295 = **first**
         | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
         || ($r3 = $r3 * v_295 = v_295
            | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )



====================Start rewrites======================Using rule:
length_cons gives r_4542 = (numeric_const(1) + numeric_const(0))  
equal to r_4505 = numeric_const(1) = length(cons($r3, empty())) =
         length(cons(r_4526, empty())) 
.
Rewritten to
 r_4508 = v_295 = **second**  *
 r_4510 = numeric_const(0) = length(empty())  *
 r_4512
 = ((r_4542 + numeric_const(0)) +
   ((r_4542 + numeric_const(0)) + length(r_4528))) =
 length(v_293)  * r_4521 = @this: = r0  *
 r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
 r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
 r_4533 = $r3 = $ret_var = v_292  *
 r_4540 = ((r_4542 + numeric_const(0)) + length(r_4528)) = length(v_294)  *
 r_4542 = ((r_4542 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4526, empty()))   
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4542 + numeric_const(0)) + _v_1234)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int size>,
           ((r_4542 + numeric_const(0)) + length(r_4528))) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4517) *
     dseg_ne(_v_1232, r_4527, $r1, _v_1232, cons(r_4526, empty()))
    
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = $r3 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites======================Rewritten to
 r_4508 = v_295 = **second**  *
 r_4510 = numeric_const(0) = length(empty())  *
 r_4512
 = ((r_4542 + numeric_const(0)) +
   ((r_4542 + numeric_const(0)) + length(r_4528))) =
 length(v_293)  * r_4521 = @this: = r0  *
 r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
 r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
 r_4533 = $r3 = $ret_var = v_292  *
 r_4540 = ((r_4542 + numeric_const(0)) + length(r_4528)) = length(v_294)  *
 r_4542 = ((r_4542 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4526, empty()))   
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4542 + numeric_const(0)) + _v_1234)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int size>,
           ((r_4542 + numeric_const(0)) + length(r_4528))) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4517) *
     dseg_ne(_v_1232, r_4527, $r1, _v_1232, cons(r_4526, empty()))
    
 |-  | 
    (v_295 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=empty()}) )
    || ($r3 = $r3 * v_295 = v_295
       | LinkedList$java.util.LinkedList(@this:, {list=v_294}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_4508 = v_295 = **second**  *
       r_4510 = numeric_const(0) = length(empty())  *
       r_4512 = (numeric_const(1) + (numeric_const(1) + length(r_4528))) =
       length(v_293)  * r_4521 = @this: = r0  *
       r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
       r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
       r_4533 = $r3 = $ret_var = v_292  *
       r_4540 = (numeric_const(1) + length(r_4528)) = length(v_294)  *
       r_4542 = numeric_const(1) = length(cons($r3, empty())) =
       length(cons(r_4526, empty()))   
       | 
         | dseg_ne(_v_1232, r_4527, $r1, _v_1232, cons(r_4526, empty())) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 r_4517) *
           dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1) *
           field(@this:, <java.util.LinkedList: int size>,
                 (numeric_const(1) + length(r_4528))) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 _v_1232) *
           field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_1234)) *
           dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
          
       |-  |  False



====================Start rewrites======================Using rule:
length_cons gives r_4576 = (numeric_const(1) + numeric_const(0))  
equal to r_4542 = numeric_const(1) = length(cons($r3, empty())) =
         length(cons(r_4526, empty())) 
.
Rewritten to
 r_4508 = v_295 = **second**  *
 r_4510 = numeric_const(0) = length(empty())  *
 r_4512
 = ((r_4576 + numeric_const(0)) +
   ((r_4576 + numeric_const(0)) + length(r_4528))) =
 length(v_293)  * r_4521 = @this: = r0  *
 r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
 r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
 r_4533 = $r3 = $ret_var = v_292  *
 r_4540 = ((r_4576 + numeric_const(0)) + length(r_4528)) = length(v_294)  *
 r_4576 = ((r_4576 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4526, empty()))   
 | 
   | dseg_ne(_v_1232, r_4527, $r1, _v_1232, cons(r_4526, empty())) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4517) *
     dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int size>,
           ((r_4576 + numeric_const(0)) + length(r_4528))) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4576 + numeric_const(0)) + _v_1234)) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
    
 |-  |  False


====================Start rewrites======================Rewritten to
 r_4508 = v_295 = **second**  *
 r_4510 = numeric_const(0) = length(empty())  *
 r_4512
 = ((r_4576 + numeric_const(0)) +
   ((r_4576 + numeric_const(0)) + length(r_4528))) =
 length(v_293)  * r_4521 = @this: = r0  *
 r_4524 = v_294 = app(r_4528, cons(r_4526, empty()))  *
 r_4530 = app(r_4528, cons(r_4526, cons($r3, empty()))) = v_293  *
 r_4533 = $r3 = $ret_var = v_292  *
 r_4540 = ((r_4576 + numeric_const(0)) + length(r_4528)) = length(v_294)  *
 r_4576 = ((r_4576 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4526, empty()))   
 | 
   | dseg_ne(_v_1232, r_4527, $r1, _v_1232, cons(r_4526, empty())) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_4517) *
     dseg_ne(r_4517, $r1, _v_1232, r_4527, r_4528) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int size>,
           ((r_4576 + numeric_const(0)) + length(r_4528))) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1232) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_4576 + numeric_const(0)) + _v_1234)) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
    
 |-  |  False


====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_4543 = numeric_const(1) = length(cons($r3, empty())) =
       length(cons(r_4557, empty()))  *
       r_4545 = (numeric_const(1) + length(r_4555)) = length(v_294)  *
       r_4550 = $r3 = $ret_var = v_292  *
       r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
       r_4559 = v_294 = app(r_4555, cons(r_4557, empty()))  *
       r_4561 = @this: = r0  *
       r_4570 = (numeric_const(1) + (numeric_const(1) + length(r_4555))) =
       length(v_293)  * r_4572 = numeric_const(0) = length(empty())  *
       r_4574 = v_295 = **second**   
       | 
         | dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty())) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 r_4565) *
           dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1) *
           field(@this:, <java.util.LinkedList: int size>,
                 (numeric_const(1) + length(r_4555))) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 _v_1232) *
           field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_1234)) *
           dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
          
       |-  | LinkedList$java.util.LinkedList(@this:, {list=v_294}) 

Rule: apf_body_right_LinkedList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
        length(cons(r_4557, empty()))  * r_4550 = $r3 = $ret_var = v_292  *
        r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
        r_4561 = @this: = r0  *
        r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
        r_4572 = numeric_const(0) = length(empty())  *
        r_4574 = v_295 = **second**  *
        r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
        r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
        field(@this:, <java.util.LinkedList: int size>, length(v_294))
        | 
          | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
            field(@this:, <java.util.LinkedList: int modCount>,
                  (numeric_const(1) + _v_1234)) *
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  _v_1232) *
            field(@this:,
                  <java.util.LinkedList: java.util.LinkedList$Entry header>,
                  $r1) *
            dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                  r_4565) *
            dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty()))
           
        |- 
           | AbstractSequentialList$java.util.AbstractSequentialList(
             @this:, {modCount=r_4583}) *
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   r_4580) *
             field(r_4580,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   r_4581) *
             field(r_4580,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   r_4579) *
             dseg(r_4581, r_4580, r_4580, r_4579, v_294)
           

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
         length(cons(r_4557, empty()))  * r_4550 = $r3 = $ret_var = v_292  *
         r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
         r_4561 = @this: = r0  *
         r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
         r_4572 = numeric_const(0) = length(empty())  *
         r_4574 = v_295 = **second**  *
         r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
         r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
         field(@this:, <java.util.LinkedList: int size>, length(v_294))
         | 
           | dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty())) *
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   r_4565) *
             dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
             dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
             field(@this:, <java.util.LinkedList: int modCount>,
                   (numeric_const(1) + _v_1234)) *
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   _v_1232)
            
         |- 
            | AbstractSequentialList$java.util.AbstractSequentialList(
              @this:, {modCount=r_4583}) *
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    r_4581) *
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    r_4579) *
              dseg(r_4581, $r1, $r1, r_4579, v_294)
            

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
          length(cons(r_4557, empty()))  * r_4550 = $r3 = $ret_var = v_292  *
          r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
          r_4561 = @this: = r0  *
          r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
          r_4572 = numeric_const(0) = length(empty())  *
          r_4574 = v_295 = **second**  *
          r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
          r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                r_4565)*
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r1)*
          field(@this:, <java.util.LinkedList: int size>, length(v_294))
          | 
            | field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    _v_1232) *
              field(@this:, <java.util.LinkedList: int modCount>,
                    (numeric_const(1) + _v_1234)) *
              dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
              dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
              dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty()))
             
          |- 
             | AbstractSequentialList$java.util.AbstractSequentialList(
               @this:, {modCount=r_4583}) *
               field($r1,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                     r_4579) *
               dseg(r_4565, $r1, $r1, r_4579, v_294)
             

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
           length(cons(r_4557, empty()))  *
           r_4550 = $r3 = $ret_var = v_292  *
           r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
           r_4561 = @this: = r0  *
           r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
           r_4572 = numeric_const(0) = length(empty())  *
           r_4574 = v_295 = **second**  *
           r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
           r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 _v_1232)*
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 r_4565)*
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1)*
           field(@this:, <java.util.LinkedList: int size>, length(v_294))
           | 
             | dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty())) *
               dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
               dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
               field(@this:, <java.util.LinkedList: int modCount>,
                     (numeric_const(1) + _v_1234))
              
           |- 
              | AbstractSequentialList$java.util.AbstractSequentialList(
                @this:, {modCount=r_4583}) *
                dseg(r_4565, $r1, $r1, _v_1232, v_294)
              

Rule: dseg_disj_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
            length(cons(r_4557, empty()))  *
            r_4550 = $r3 = $ret_var = v_292  *
            r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
            r_4561 = @this: = r0  *
            r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
            r_4572 = numeric_const(0) = length(empty())  *
            r_4574 = v_295 = **second**  *
            r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
            r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  _v_1232)*
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                  r_4565)*
            field(@this:,
                  <java.util.LinkedList: java.util.LinkedList$Entry header>,
                  $r1)*
            field(@this:, <java.util.LinkedList: int size>, length(v_294))
            | 
              | field(@this:, <java.util.LinkedList: int modCount>,
                      (numeric_const(1) + _v_1234)) *
                dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty()))
               
            |- 
               | AbstractSequentialList$java.util.AbstractSequentialList(
                 @this:, {modCount=r_4583})
               (v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  )
               || ( | dseg_ne(r_4565, $r1, $r1, _v_1232, v_294) )

Rule: apf_body_right_AbstractSequentialList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------------>r_4543 = numeric_const(1) = length(cons($r3, empty())) =
             length(cons(r_4557, empty()))  *
             r_4550 = $r3 = $ret_var = v_292  *
             r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
             r_4561 = @this: = r0  *
             r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
             r_4572 = numeric_const(0) = length(empty())  *
             r_4574 = v_295 = **second**  *
             r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
             r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                   _v_1232)*
             field($r1,
                   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                   r_4565)*
             field(@this:,
                   <java.util.LinkedList: java.util.LinkedList$Entry header>,
                   $r1)*
             field(@this:, <java.util.LinkedList: int size>, length(v_294))
             | 
               | dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty())) *
                 dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                 dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                 field(@this:, <java.util.LinkedList: int modCount>,
                       (numeric_const(1) + _v_1234))
                
             |- 
                | AbstractList$java.util.AbstractList(@this:,
                                                      {modCount=r_4586})
                (v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  )
                || ( | dseg_ne(r_4565, $r1, $r1, _v_1232, v_294) )

Rule: apf_body_right_AbstractList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
              length(cons(r_4557, empty()))  *
              r_4550 = $r3 = $ret_var = v_292  *
              r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
              r_4561 = @this: = r0  *
              r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
              r_4572 = numeric_const(0) = length(empty())  *
              r_4574 = v_295 = **second**  *
              r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
              r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                    _v_1232)*
              field($r1,
                    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                    r_4565)*
              field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r1)*
              field(@this:, <java.util.LinkedList: int size>, length(v_294))
              | 
                | field(@this:, <java.util.LinkedList: int modCount>,
                        (numeric_const(1) + _v_1234)) *
                  dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                  dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                  dseg_ne(_v_1232, r_4556, $r1, _v_1232,
                          cons(r_4557, empty()))
                 
              |- 
                 | field(@this:, <java.util.AbstractList: int modCount>,
                         r_4588)
                 (v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  )
                 || ( | dseg_ne(r_4565, $r1, $r1, _v_1232, v_294) )

Rule: inherit_modcount2

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------------->r_4543 = numeric_const(1) = length(cons($r3, empty())) =
               length(cons(r_4557, empty()))  *
               r_4550 = $r3 = $ret_var = v_292  *
               r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293 
               * r_4561 = @this: = r0  *
               r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
               r_4572 = numeric_const(0) = length(empty())  *
               r_4574 = v_295 = **second**  *
               r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
               r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  
               field(@this:, <java.util.AbstractList: int modCount>,
                     (numeric_const(1) + _v_1234))*
               field($r1,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                     _v_1232)*
               field($r1,
                     <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                     r_4565)*
               field(@this:,
                     <java.util.LinkedList: java.util.LinkedList$Entry header>,
                     $r1)*
               field(@this:, <java.util.LinkedList: int size>, length(v_294))
               | 
                 | dseg_ne(_v_1232, r_4556, $r1, _v_1232,
                           cons(r_4557, empty())) *
                   dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                   dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
                  
               |-  | 
                  (v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  )
                  || ( | dseg_ne(r_4565, $r1, $r1, _v_1232, v_294) )



====================Start rewrites======================Using rule:
length_cons gives r_4591 = (numeric_const(1) + numeric_const(0))  
equal to r_4543 = numeric_const(1) = length(cons($r3, empty())) =
         length(cons(r_4557, empty())) 
.
Rewritten to
 r_4550 = $r3 = $ret_var = v_292  *
 r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
 r_4561 = @this: = r0  *
 r_4570 = ((r_4591 + numeric_const(0)) + length(v_294)) = length(v_293)  *
 r_4572 = numeric_const(0) = length(empty())  *
 r_4574 = v_295 = **second**  *
 r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
 r_4585 = length(v_294) = ((r_4591 + numeric_const(0)) + length(r_4555))  *
 r_4591 = ((r_4591 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4557, empty()))  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4591 + numeric_const(0)) + _v_1234))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_4565)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_294))
 | 
   | dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty())) *
     dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
    
 |-  | 
    (v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  )
    || ( | dseg_ne(r_4565, $r1, $r1, _v_1232, v_294) )


====================Start rewrites======================Rewritten to
 r_4550 = $r3 = $ret_var = v_292  *
 r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
 r_4561 = @this: = r0  *
 r_4570 = ((r_4591 + numeric_const(0)) + length(v_294)) = length(v_293)  *
 r_4572 = numeric_const(0) = length(empty())  *
 r_4574 = v_295 = **second**  *
 r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
 r_4585 = length(v_294) = ((r_4591 + numeric_const(0)) + length(r_4555))  *
 r_4591 = ((r_4591 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4557, empty()))  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4591 + numeric_const(0)) + _v_1234))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_4565)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_294))
 | 
   | dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty())) *
     dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
    
 |-  | 
    (v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  )
    || ( | dseg_ne(r_4565, $r1, $r1, _v_1232, v_294) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------------->r_4550 = $r3 = $ret_var = v_292  *
                r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) =
                v_293  * r_4561 = @this: = r0  *
                r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
                r_4572 = numeric_const(0) = length(empty())  *
                r_4574 = v_295 = **second**  *
                r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
                r_4585 = length(v_294) = (numeric_const(1) + length(r_4555))  *
                r_4591 = numeric_const(1) = length(cons($r3, empty())) =
                length(cons(r_4557, empty()))  
                field(@this:, <java.util.AbstractList: int modCount>,
                      (numeric_const(1) + _v_1234))*
                field($r1,
                      <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                      _v_1232)*
                field($r1,
                      <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                      r_4565)*
                field(@this:,
                      <java.util.LinkedList: java.util.LinkedList$Entry header>,
                      $r1)*
                field(@this:, <java.util.LinkedList: int size>, length(v_294))
                | 
                  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                    dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                    dseg_ne(_v_1232, r_4556, $r1, _v_1232,
                            cons(r_4557, empty()))
                   
                |- v_294 = empty() * r_4565 = $r1 * _v_1232 = $r1 |  

Rule: app_is_emp1_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---------------->r_4550 = $r3 = $ret_var = v_292  *
                 r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) =
                 v_293  * r_4561 = @this: = r0  *
                 r_4570 = (numeric_const(1) + length(v_294)) = length(v_293)  *
                 r_4572 = numeric_const(0) = length(empty())  *
                 r_4574 = v_295 = **second**  *
                 r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
                 r_4585 = length(v_294) = (numeric_const(1) + length(r_4555)) 
                 *
                 r_4591 = numeric_const(1) = length(cons($r3, empty())) =
                 length(cons(r_4557, empty()))  
                 field(@this:, <java.util.AbstractList: int modCount>,
                       (numeric_const(1) + _v_1234))*
                 field($r1,
                       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                       _v_1232)*
                 field($r1,
                       <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                       r_4565)*
                 field(@this:,
                       <java.util.LinkedList: java.util.LinkedList$Entry header>,
                       $r1)*
                 field(@this:, <java.util.LinkedList: int size>,
                       length(v_294))
                 | 
                   | dseg_ne(_v_1232, r_4556, $r1, _v_1232,
                             cons(r_4557, empty())) *
                     dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))
                    
                 |- r_4555 = empty() * cons(r_4557, empty()) = empty() *
                    r_4565 = $r1 * _v_1232 = $r1 |  

Rule: cons_empty_eq_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----------------->r_4550 = $r3 = $ret_var = v_292  *
                  r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) =
                  v_293  * r_4561 = @this: = r0  *
                  r_4570 = (numeric_const(1) + length(v_294)) = length(v_293) 
                  * r_4572 = numeric_const(0) = length(empty())  *
                  r_4574 = v_295 = **second**  *
                  r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
                  r_4585 = length(v_294) =
                  (numeric_const(1) + length(r_4555))  *
                  r_4591 = numeric_const(1) = length(cons($r3, empty())) =
                  length(cons(r_4557, empty()))  
                  field(@this:, <java.util.AbstractList: int modCount>,
                        (numeric_const(1) + _v_1234))*
                  field($r1,
                        <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                        _v_1232)*
                  field($r1,
                        <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                        r_4565)*
                  field(@this:,
                        <java.util.LinkedList: java.util.LinkedList$Entry header>,
                        $r1)*
                  field(@this:, <java.util.LinkedList: int size>,
                        length(v_294))
                  | 
                    | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                      dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
                      dseg_ne(_v_1232, r_4556, $r1, _v_1232,
                              cons(r_4557, empty()))
                     
                  |-  |  False



====================Start rewrites======================Using rule:
length_cons gives r_4624 = (numeric_const(1) + numeric_const(0))  
equal to r_4591 = numeric_const(1) = length(cons($r3, empty())) =
         length(cons(r_4557, empty())) 
.
Rewritten to
 r_4550 = $r3 = $ret_var = v_292  *
 r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
 r_4561 = @this: = r0  *
 r_4570 = ((r_4624 + numeric_const(0)) + length(v_294)) = length(v_293)  *
 r_4572 = numeric_const(0) = length(empty())  *
 r_4574 = v_295 = **second**  *
 r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
 r_4585 = length(v_294) = ((r_4624 + numeric_const(0)) + length(r_4555))  *
 r_4624 = ((r_4624 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4557, empty()))  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4624 + numeric_const(0)) + _v_1234))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_4565)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_294))
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
     dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
     dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty()))
    
 |-  |  False


====================Start rewrites======================Rewritten to
 r_4550 = $r3 = $ret_var = v_292  *
 r_4553 = app(r_4555, cons(r_4557, cons($r3, empty()))) = v_293  *
 r_4561 = @this: = r0  *
 r_4570 = ((r_4624 + numeric_const(0)) + length(v_294)) = length(v_293)  *
 r_4572 = numeric_const(0) = length(empty())  *
 r_4574 = v_295 = **second**  *
 r_4577 = v_294 = app(r_4555, cons(r_4557, empty()))  *
 r_4585 = length(v_294) = ((r_4624 + numeric_const(0)) + length(r_4555))  *
 r_4624 = ((r_4624 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4557, empty()))  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4624 + numeric_const(0)) + _v_1234))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_4565)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_294))
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
     dseg_ne(r_4565, $r1, _v_1232, r_4556, r_4555) *
     dseg_ne(_v_1232, r_4556, $r1, _v_1232, cons(r_4557, empty()))
    
 |-  |  False


====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Backtracking!
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------------->r_4592 = numeric_const(1) = length(cons($r3, empty())) =
                length(cons(r_4612, empty()))  *
                r_4594 = length(v_294) = (numeric_const(1) + length(r_4614))  *
                r_4595 = v_294 = app(r_4614, cons(r_4612, empty()))  *
                r_4597 = v_295 = **second**  *
                r_4598 = numeric_const(0) = length(empty())  *
                r_4600 = (numeric_const(1) + length(v_294)) = length(v_293)  *
                r_4609 = @this: = r0  *
                r_4616 = app(r_4614, cons(r_4612, cons($r3, empty()))) =
                v_293  * r_4619 = $r3 = $ret_var = v_292  
                field(@this:, <java.util.AbstractList: int modCount>,
                      (numeric_const(1) + _v_1234))*
                field($r1,
                      <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                      _v_1232)*
                field($r1,
                      <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                      r_4605)*
                field(@this:,
                      <java.util.LinkedList: java.util.LinkedList$Entry header>,
                      $r1)*
                field(@this:, <java.util.LinkedList: int size>, length(v_294))
                | 
                  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty())) *
                    dseg_ne(r_4605, $r1, _v_1232, r_4613, r_4614) *
                    dseg_ne(_v_1232, r_4613, $r1, _v_1232,
                            cons(r_4612, empty()))
                   
                |-  | dseg_ne(r_4605, $r1, $r1, _v_1232, v_294) 

Rule: dseg_app_rollup_left2

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---------------->r_4592 = numeric_const(1) = length(cons($r3, empty())) =
                 length(cons(r_4612, empty()))  *
                 r_4594 = length(v_294) = (numeric_const(1) + length(r_4614)) 
                 * r_4595 = v_294 = app(r_4614, cons(r_4612, empty()))  *
                 r_4597 = v_295 = **second**  *
                 r_4598 = numeric_const(0) = length(empty())  *
                 r_4600 = (numeric_const(1) + length(v_294)) = length(v_293)  *
                 r_4609 = @this: = r0  *
                 r_4616 = app(r_4614, cons(r_4612, cons($r3, empty()))) =
                 v_293  * r_4619 = $r3 = $ret_var = v_292  
                 dseg_ne(r_4605, $r1, _v_1232, r_4613, r_4614)*
                 dseg_ne(_v_1232, r_4613, $r1, _v_1232, cons(r_4612, empty()))*
                 field(@this:, <java.util.AbstractList: int modCount>,
                       (numeric_const(1) + _v_1234))*
                 field($r1,
                       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                       _v_1232)*
                 field($r1,
                       <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                       r_4605)*
                 field(@this:,
                       <java.util.LinkedList: java.util.LinkedList$Entry header>,
                       $r1)*
                 field(@this:, <java.util.LinkedList: int size>,
                       length(v_294))
                 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))  
                 |-  |  



====================Start rewrites======================Using rule:
length_cons gives r_4625 = (numeric_const(1) + numeric_const(0))  
equal to r_4592 = numeric_const(1) = length(cons($r3, empty())) =
         length(cons(r_4612, empty())) 
.
Rewritten to
 r_4594 = length(v_294) = ((r_4625 + numeric_const(0)) + length(r_4614))  *
 r_4595 = v_294 = app(r_4614, cons(r_4612, empty()))  *
 r_4597 = v_295 = **second**  *
 r_4598 = numeric_const(0) = length(empty())  *
 r_4600 = ((r_4625 + numeric_const(0)) + length(v_294)) = length(v_293)  *
 r_4609 = @this: = r0  *
 r_4616 = app(r_4614, cons(r_4612, cons($r3, empty()))) = v_293  *
 r_4619 = $r3 = $ret_var = v_292  *
 r_4625 = ((r_4625 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4612, empty()))  
 dseg_ne(r_4605, $r1, _v_1232, r_4613, r_4614)*
 dseg_ne(_v_1232, r_4613, $r1, _v_1232, cons(r_4612, empty()))*
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4625 + numeric_const(0)) + _v_1234))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_4605)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_294))
 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))   |-  |  


====================Start rewrites======================Rewritten to
 r_4594 = length(v_294) = ((r_4625 + numeric_const(0)) + length(r_4614))  *
 r_4595 = v_294 = app(r_4614, cons(r_4612, empty()))  *
 r_4597 = v_295 = **second**  *
 r_4598 = numeric_const(0) = length(empty())  *
 r_4600 = ((r_4625 + numeric_const(0)) + length(v_294)) = length(v_293)  *
 r_4609 = @this: = r0  *
 r_4616 = app(r_4614, cons(r_4612, cons($r3, empty()))) = v_293  *
 r_4619 = $r3 = $ret_var = v_292  *
 r_4625 = ((r_4625 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(cons($r3, empty())) =
 length(cons(r_4612, empty()))  
 dseg_ne(r_4605, $r1, _v_1232, r_4613, r_4614)*
 dseg_ne(_v_1232, r_4613, $r1, _v_1232, cons(r_4612, empty()))*
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_4625 + numeric_const(0)) + _v_1234))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       _v_1232)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_4605)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_294))
 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), empty()))   |-  |  


====================Start rewrites=======================================Finished rewrites====================

End time :2.000125 

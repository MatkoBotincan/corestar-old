
---------------------------------------------------------
Goal
r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1   
| 
  | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r3) *
    dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty())) *
    field($r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_7287) *
    field(@this:, <java.util.LinkedList: int size>, length(v_341)) *
    field(@this:, <java.util.AbstractList: int modCount>, r_7292) *
    field($r3,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_7285) *
    dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty()))
  (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
  || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
|- nil() = r_7316 * nil() = r_7316 * length(r_7302) = r_7315 * r2 = r_7313 *
   r2 = r_7313 * <java.util.AbstractList: int modCount> = r_7311 *
   empty() = r_7309 * <java.util.LinkedList: int size> = r_7308 *
   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = r_7307 *
   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = r_7306 *
   $r3 = r_7304 * $r3 = r_7304 * cons(r_7312, r_7314) = r_7302 *
   v_341 = r_7302 *
   <java.util.LinkedList: java.util.LinkedList$Entry header> = r_7301 *
   @this: = r_7300 * @this: = r_7300 * cons(r_7316, r_7309) = r_7299
   | field(r_7300, r_7301, r_7304) * field(r_7304, r_7306, r_7303) *
     field(r_7300, r_7311, r_7310) * field(r_7300, r_7308, r_7315) *
     field(r_7304, r_7307, r_7305) *
     dseg_ne(r_7305, r_7316, r_7316, r_7305, r_7299)
   (r_7314 = r_7309 * r_7313 = r_7304 * r_7303 = r_7305 |  )
   || ( | dseg_ne(r_7313, r_7305, r_7304, r_7303, r_7314) )

Start time :3.320207 
Foo

====================Start rewrites======================Using rule:
length_cons gives r_7323 = (numeric_const(1) + length(r_7314))  
equal to r_7319 = length(cons(r_7312, r_7314)) 
.
Rewritten to
 r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
 r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1  *
 r_7323 = (numeric_const(1) + length(r_7314)) = length(cons(r_7312, r_7314)) 
   | 
     | field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3) *
       dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty())) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7287) *
       field(@this:, <java.util.LinkedList: int size>, length(v_341)) *
       field(@this:, <java.util.AbstractList: int modCount>, r_7292) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_7285) *
       dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty()))
     (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
     || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
 |- cons(nil(), empty()) = cons(nil(), empty()) * @this: = @this: *
    <java.util.LinkedList: java.util.LinkedList$Entry header> = <java.util.LinkedList: java.util.LinkedList$Entry header> *
    v_341 = cons(r_7312, r_7314) *
    cons(r_7312, r_7314) = cons(r_7312, r_7314) * $r3 = $r3 *
    <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> *
    <java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = <java.util.LinkedList$Entry: java.util.LinkedList$Entry next> *
    <java.util.LinkedList: int size> = <java.util.LinkedList: int size> *
    empty() = empty() *
    <java.util.AbstractList: int modCount> = <java.util.AbstractList: int modCount> *
    r2 = r2 *
    (numeric_const(1) + length(r_7314)) = (numeric_const(1) + length(r_7314)) *
    nil() = nil()
    | field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_7303) *
      field(@this:, <java.util.AbstractList: int modCount>, r_7310) *
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(1) + length(r_7314))) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7305) *
      dseg_ne(r_7305, nil(), nil(), r_7305, cons(nil(), empty()))
    (r_7314 = empty() * r2 = $r3 * r_7303 = r_7305 |  )
    || ( | dseg_ne(r2, r_7305, $r3, r_7303, r_7314) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

>r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
 r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1  
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3)
 | 
   | dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty())) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_7285) *
     field(@this:, <java.util.AbstractList: int modCount>, r_7292) *
     field(@this:, <java.util.LinkedList: int size>, length(v_341)) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_7287) *
     dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))
   (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
   || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
 |- v_341 = cons(r_7312, r_7314)
    | field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_7303) *
      field(@this:, <java.util.AbstractList: int modCount>, r_7310) *
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(1) + length(r_7314))) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7305) *
      dseg_ne(r_7305, nil(), nil(), r_7305, cons(nil(), empty()))
    (r_7314 = empty() * r2 = $r3 * r_7303 = r_7305 |  )
    || ( | dseg_ne(r2, r_7305, $r3, r_7303, r_7314) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
  r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1  
  field($r3,
        <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
        r_7285)*
  field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
        $r3)
  | 
    | dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty())) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7287) *
      field(@this:, <java.util.LinkedList: int size>, length(v_341)) *
      field(@this:, <java.util.AbstractList: int modCount>, r_7292) *
      dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty()))
    (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
    || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
  |- v_341 = cons(r_7312, r_7314)
     | field(@this:, <java.util.AbstractList: int modCount>, r_7310) *
       field(@this:, <java.util.LinkedList: int size>,
             (numeric_const(1) + length(r_7314))) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7305) *
       dseg_ne(r_7305, nil(), nil(), r_7305, cons(nil(), empty()))
     (r_7314 = empty() * r2 = $r3 * r_7285 = r_7305 |  )
     || ( | dseg_ne(r2, r_7305, $r3, r_7285, r_7314) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
   r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1  
   field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
   field($r3,
         <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
         r_7285)*
   field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
         $r3)
   | 
     | dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty())) *
       dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty())) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7287) *
       field(@this:, <java.util.LinkedList: int size>, length(v_341))
     (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
     || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
   |- v_341 = cons(r_7312, r_7314)
      | field(@this:, <java.util.LinkedList: int size>,
              (numeric_const(1) + length(r_7314))) *
        field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_7305) *
        dseg_ne(r_7305, nil(), nil(), r_7305, cons(nil(), empty()))
      (r_7314 = empty() * r2 = $r3 * r_7285 = r_7305 |  )
      || ( | dseg_ne(r2, r_7305, $r3, r_7285, r_7314) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
    r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1  
    field(@this:, <java.util.LinkedList: int size>, length(v_341))*
    field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
    field($r3,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_7285)*
    field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r3)
    | 
      | dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty())) *
        dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty())) *
        field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_7287)
      (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
      || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
    |- length(v_341) = (numeric_const(1) + length(r_7314)) *
       v_341 = cons(r_7312, r_7314)
       | field($r3,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               r_7305) *
         dseg_ne(r_7305, nil(), nil(), r_7305, cons(nil(), empty()))
       (r_7314 = empty() * r2 = $r3 * r_7285 = r_7305 |  )
       || ( | dseg_ne(r2, r_7305, $r3, r_7285, r_7314) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_7281 = app(r_7280, r_7298) = v_341  * r_7283 = @this: = r0  *
     r_7286 = $r3 = $r4  * r_7295 = nil() = $n0  * r_7297 = r2 = r1  
     dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_7287)*
     field(@this:, <java.util.LinkedList: int size>, length(v_341))*
     field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_7285)*
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r3)
     |  | dseg_ne(r_7294, nil(), nil(), r_7294, cons(nil(), empty()))
       (r_7298 = empty() * r2 = $r3 * r_7285 = r_7294 |  )
       || ( | dseg_ne(r2, r_7294, $r3, r_7285, r_7298) ) 
     |- length(v_341) = (numeric_const(1) + length(r_7314)) *
        v_341 = cons(r_7312, r_7314) | 
        (r_7314 = empty() * r2 = $r3 * r_7285 = r_7287 |  )
        || ( | dseg_ne(r2, r_7287, $r3, r_7285, r_7314) )



====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : r_7298 = empty() * r2 = $r3 *
r_7285 = r_7294


====================Start rewrites======================Using rule:
app_empty_second gives r_7280 equal to r_7281 = app(r_7280, empty()) = v_341 
.
Rewritten to
 r_7280 = app(v_341, empty()) = v_341  * r_7283 = @this: = r0  *
 r_7295 = nil() = $n0  * r_7297 = r2 = r1 = $r3 = $r4  
 dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_7287)*
 field(@this:, <java.util.LinkedList: int size>, length(v_341))*
 field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_7285)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
 |  | dseg_ne(r_7285, nil(), nil(), r_7285, cons(nil(), empty()))  
 |- v_341 = cons(r_7312, r_7314) *
    length(v_341) = (numeric_const(1) + length(r_7314)) | 
    (r_7314 = empty() * r2 = r2 * r_7285 = r_7287 |  )
    || ( | dseg_ne(r2, r_7287, r2, r_7285, r_7314) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_7283 = @this: = r0  * r_7295 = nil() = $n0  *
      r_7297 = r2 = r1 = $r3 = $r4  
      dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7287)*
      field(@this:, <java.util.LinkedList: int size>, length(v_341))*
      field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_7285)*
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
      |  | dseg_ne(r_7285, nil(), nil(), r_7285, cons(nil(), empty()))  
      |- length(v_341) = (numeric_const(1) + length(r_7314)) *
         v_341 = cons(r_7312, r_7314) | 
         (r_7314 = empty() * r2 = r2 * r_7285 = r_7287 |  )
         || ( | dseg_ne(r2, r_7287, r2, r_7285, r_7314) )



====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites======================Using rule:
length_empty gives r_7373 = numeric_const(0)  
equal to r_7320 = length(empty()) 
.
Rewritten to
 r_7283 = @this: = r0  * r_7295 = nil() = $n0  *
 r_7297 = r2 = r1 = $r3 = $r4  * r_7373 = numeric_const(0) = length(empty()) 
  dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
  field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
        r_7287)*
  field(@this:, <java.util.LinkedList: int size>, length(v_341))*
  field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
  field(r2,
        <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
        r_7285)*
  field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
 |  | dseg_ne(r_7285, nil(), nil(), r_7285, cons(nil(), empty()))  
 |- v_341 = cons(r_7312, empty()) *
    length(v_341) = (numeric_const(1) + numeric_const(0)) * r_7285 = r_7287 *
    empty() = empty() |  


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule:
plus_zero_second gives r_7322 = numeric_const(1)  
equal to r_7323 = (numeric_const(1) + numeric_const(0)) 
.
Rewritten to
 r_7283 = @this: = r0  * r_7295 = nil() = $n0  *
 r_7297 = r2 = r1 = $r3 = $r4  *
 r_7322 = numeric_const(1) = (numeric_const(1) + numeric_const(0))  
 dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_7287)*
 field(@this:, <java.util.LinkedList: int size>, length(v_341))*
 field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_7285)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
 |  | dseg_ne(r_7285, nil(), nil(), r_7285, cons(nil(), empty()))  
 |- v_341 = cons(r_7312, empty()) * length(v_341) = numeric_const(1) *
    r_7285 = r_7287 * empty() = empty() |  


====================Start rewrites=======================================Finished rewrites====================

------>r_7283 = @this: = r0  * r_7295 = nil() = $n0  *
       r_7297 = r2 = r1 = $r3 = $r4  
       dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7287)*
       field(@this:, <java.util.LinkedList: int size>, length(v_341))*
       field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_7285)*
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
       |  | dseg_ne(r_7285, nil(), nil(), r_7285, cons(nil(), empty()))  
       |- r_7285 = r_7287 * length(v_341) = numeric_const(1) *
          v_341 = cons(r_7312, empty()) |  

Rule: dseg_dseg_contradiction2_split

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_7283 = @this: = r0  * r_7295 = nil() = $n0  *
        r_7297 = r2 = r1 = $r3 = $r4  
        dseg_ne(r_7287, nil(), nil(), r_7287, cons(nil(), empty()))*
        field(r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_7287)*
        field(@this:, <java.util.LinkedList: int size>, length(v_341))*
        field(@this:, <java.util.AbstractList: int modCount>, r_7292)*
        field(r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_7285)*
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
        |  | dseg_ne(r_7285, nil(), nil(), r_7285, cons(nil(), empty()))  
        |-  |  False



====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_7358 = r2 = r1 = $r3 = $r4  * r_7360 = nil() = $n0  *
       r_7369 = @this: = r0  
       dseg_ne(r_7366, nil(), nil(), r_7366, cons(nil(), empty()))*
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7366)*
       field(@this:, <java.util.LinkedList: int size>, length(v_341))*
       field(@this:, <java.util.AbstractList: int modCount>, r_7362)*
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_7367)*
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
       |  | dseg_ne(r_7367, nil(), nil(), r_7367, cons(nil(), empty()))  
       |- length(v_341) = (numeric_const(1) + length(r_7355)) *
          v_341 = cons(r_7356, r_7355)
          | dseg_ne(r2, r_7366, r2, r_7367, r_7355) 

Rule: dseg_ne_empty5_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_7358 = r2 = r1 = $r3 = $r4  * r_7360 = nil() = $n0  *
        r_7369 = @this: = r0  
        dseg_ne(r_7366, nil(), nil(), r_7366, cons(nil(), empty()))*
        field(r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_7366)*
        field(@this:, <java.util.LinkedList: int size>, length(v_341))*
        field(@this:, <java.util.AbstractList: int modCount>, r_7362)*
        field(r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_7367)*
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
        |  | dseg_ne(r_7367, nil(), nil(), r_7367, cons(nil(), empty()))  
        |-  |  False



====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Backtracking!
Backtracking!
Backtracking!
Backtracking!
Backtracking!

---------------------------------------------------------
Goal
r_7375 = app(r_7374, r_7392) = v_341  * r_7377 = @this: = r0  *
r_7380 = $r3 = $r4  * r_7389 = nil() = $n0  * r_7391 = r2 = r1   
| 
  | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r3) *
    dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty())) *
    field($r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_7381) *
    field(@this:, <java.util.LinkedList: int size>, length(v_341)) *
    field(@this:, <java.util.AbstractList: int modCount>, r_7386) *
    field($r3,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_7379) *
    dseg_ne(r_7388, nil(), nil(), r_7388, cons(nil(), empty()))
  (r_7392 = empty() * r2 = $r3 * r_7379 = r_7388 |  )
  || ( | dseg_ne(r2, r_7388, $r3, r_7379, r_7392) ) 
|- <java.util.AbstractList: int modCount> = r_7405 * empty() = r_7403 *
   length(r_7395) = r_7402 * <java.util.LinkedList: int size> = r_7401 *
   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = r_7400 *
   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = r_7399 *
   r2 = r_7398 * $r3 = r_7397 * v_341 = r_7395 *
   <java.util.LinkedList: java.util.LinkedList$Entry header> = r_7394 *
   @this: = r_7393 * @this: = r_7393
   | field(r_7397, r_7399, r_7396) * field(r_7393, r_7405, r_7404) *
     field(r_7393, r_7401, r_7402) * field(r_7393, r_7394, r_7397) *
     field(r_7397, r_7400, r_7398)
   (r_7395 = r_7403 * r_7398 = r_7397 * r_7396 = r_7397 |  )
   || ( | dseg_ne(r_7398, r_7397, r_7397, r_7396, r_7395) )

Start time :3.356209 
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

>r_7375 = app(r_7374, r_7392) = v_341  * r_7377 = @this: = r0  *
 r_7380 = $r3 = $r4  * r_7389 = nil() = $n0  * r_7391 = r2 = r1  
 field(@this:, <java.util.LinkedList: int size>, length(v_341))*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3)
 | 
   | dseg_ne(r_7388, nil(), nil(), r_7388, cons(nil(), empty())) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_7379) *
     field(@this:, <java.util.AbstractList: int modCount>, r_7386) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_7381) *
     dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty()))
   (r_7392 = empty() * r2 = $r3 * r_7379 = r_7388 |  )
   || ( | dseg_ne(r2, r_7388, $r3, r_7379, r_7392) ) 
 |- 
    | field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_7396) *
      field(@this:, <java.util.AbstractList: int modCount>, r_7404) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, r2)
    (v_341 = empty() * r2 = $r3 * r_7396 = $r3 |  )
    || ( | dseg_ne(r2, $r3, $r3, r_7396, v_341) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_7375 = app(r_7374, r_7392) = v_341  * r_7377 = @this: = r0  *
  r_7380 = $r3 = $r4  * r_7389 = nil() = $n0  * r_7391 = r2 = r1  
  field($r3,
        <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
        r_7379)*
  field(@this:, <java.util.LinkedList: int size>, length(v_341))*
  field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
        $r3)
  | 
    | dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty())) *
      field($r3,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7381) *
      field(@this:, <java.util.AbstractList: int modCount>, r_7386) *
      dseg_ne(r_7388, nil(), nil(), r_7388, cons(nil(), empty()))
    (r_7392 = empty() * r2 = $r3 * r_7379 = r_7388 |  )
    || ( | dseg_ne(r2, r_7388, $r3, r_7379, r_7392) ) 
  |- 
     | field(@this:, <java.util.AbstractList: int modCount>, r_7404) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r2)
     (v_341 = empty() * r2 = $r3 * r_7379 = $r3 |  )
     || ( | dseg_ne(r2, $r3, $r3, r_7379, v_341) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_7375 = app(r_7374, r_7392) = v_341  * r_7377 = @this: = r0  *
   r_7380 = $r3 = $r4  * r_7389 = nil() = $n0  * r_7391 = r2 = r1  
   field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
   field($r3,
         <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
         r_7379)*
   field(@this:, <java.util.LinkedList: int size>, length(v_341))*
   field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
         $r3)
   | 
     | dseg_ne(r_7388, nil(), nil(), r_7388, cons(nil(), empty())) *
       dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty())) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7381)
     (r_7392 = empty() * r2 = $r3 * r_7379 = r_7388 |  )
     || ( | dseg_ne(r2, r_7388, $r3, r_7379, r_7392) ) 
   |- 
      | field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r2)
      (v_341 = empty() * r2 = $r3 * r_7379 = $r3 |  )
      || ( | dseg_ne(r2, $r3, $r3, r_7379, v_341) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_7375 = app(r_7374, r_7392) = v_341  * r_7377 = @this: = r0  *
    r_7380 = $r3 = $r4  * r_7389 = nil() = $n0  * r_7391 = r2 = r1  
    field($r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_7381)*
    field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
    field($r3,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_7379)*
    field(@this:, <java.util.LinkedList: int size>, length(v_341))*
    field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r3)
    | 
      | dseg_ne(r_7388, nil(), nil(), r_7388, cons(nil(), empty())) *
        dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty()))
      (r_7392 = empty() * r2 = $r3 * r_7379 = r_7388 |  )
      || ( | dseg_ne(r2, r_7388, $r3, r_7379, r_7392) ) 
    |- r_7381 = r2 | 
       (v_341 = empty() * r2 = $r3 * r_7379 = $r3 |  )
       || ( | dseg_ne(r2, $r3, $r3, r_7379, v_341) )



====================Start rewrites======================Using rule:
length_app gives r_7409 = (length(r_7374) + length(r_7392))  
equal to r_7390 = length(v_341) 
.
Rewritten to
 r_7375 = app(r_7374, r_7392) = v_341  * r_7377 = @this: = r0  *
 r_7380 = $r3 = $r4  * r_7389 = nil() = $n0  * r_7391 = r2 = r1  *
 r_7409 = (length(r_7374) + length(r_7392)) = length(v_341)  
 field($r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_7381)*
 field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
 field($r3,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_7379)*
 field(@this:, <java.util.LinkedList: int size>,
       (length(r_7374) + length(r_7392)))*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3)
 | 
   | dseg_ne(r_7388, nil(), nil(), r_7388, cons(nil(), empty())) *
     dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty()))
   (r_7392 = empty() * r2 = $r3 * r_7379 = r_7388 |  )
   || ( | dseg_ne(r2, r_7388, $r3, r_7379, r_7392) ) 
 |- r_7381 = r2 | 
    (v_341 = empty() * r2 = $r3 * r_7379 = $r3 |  )
    || ( | dseg_ne(r2, $r3, $r3, r_7379, v_341) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : r_7392 = empty() * r2 = $r3 *
r_7379 = r_7388


====================Start rewrites======================Using rule:
app_empty_second gives r_7374 equal to r_7375 = app(r_7374, empty()) = v_341 
.
Rewritten to
 r_7374 = app(v_341, empty()) = v_341  * r_7377 = @this: = r0  *
 r_7389 = nil() = $n0  * r_7391 = r2 = r1 = $r3 = $r4  *
 r_7408 = length(v_341) = (length(v_341) + length(empty()))  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_7381)*
 field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_7379)*
 field(@this:, <java.util.LinkedList: int size>, length(v_341))*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
 | 
   | dseg_ne(r_7379, nil(), nil(), r_7379, cons(nil(), empty())) *
     dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty()))
    
 |- r_7381 = r2 | 
    (v_341 = empty() * r2 = r2 * r_7379 = r2 |  )
    || ( | dseg_ne(r2, r2, r2, r_7379, v_341) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_7377 = @this: = r0  * r_7389 = nil() = $n0  *
     r_7391 = r2 = r1 = $r3 = $r4  *
     r_7408 = length(v_341) = (length(v_341) + length(empty()))  
     field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_7381)*
     field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
     field(r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_7379)*
     field(@this:, <java.util.LinkedList: int size>, length(v_341))*
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           r2)
     | 
       | dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty())) *
         dseg_ne(r_7379, nil(), nil(), r_7379, cons(nil(), empty()))
        
     |- r_7381 = r2 | 
        (v_341 = empty() * r2 = r2 * r_7379 = r2 |  )
        || ( | dseg_ne(r2, r2, r2, r_7379, v_341) )



====================Start rewrites======================Using rule:
length_empty gives r_7432 = numeric_const(0)  
equal to r_7407 = length(empty()) 
.
Rewritten to
 r_7377 = @this: = r0  * r_7389 = nil() = $n0  *
 r_7391 = r2 = r1 = $r3 = $r4  *
 r_7408 = length(v_341) = (length(v_341) + numeric_const(0))  *
 r_7432 = numeric_const(0) = length(empty())  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_7381)*
 field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_7379)*
 field(@this:, <java.util.LinkedList: int size>, length(v_341))*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
 | 
   | dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty())) *
     dseg_ne(r_7379, nil(), nil(), r_7379, cons(nil(), empty()))
    
 |- r_7381 = r2 | 
    (v_341 = empty() * r2 = r2 * r_7379 = r2 |  )
    || ( | dseg_ne(r2, r2, r2, r_7379, v_341) )


====================Start rewrites======================Rewritten to
 r_7377 = @this: = r0  * r_7389 = nil() = $n0  *
 r_7391 = r2 = r1 = $r3 = $r4  *
 r_7408 = length(v_341) = (length(v_341) + numeric_const(0))  *
 r_7432 = numeric_const(0) = length(empty())  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_7381)*
 field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_7379)*
 field(@this:, <java.util.LinkedList: int size>, length(v_341))*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
 | 
   | dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty())) *
     dseg_ne(r_7379, nil(), nil(), r_7379, cons(nil(), empty()))
    
 |- r_7381 = r2 | 
    (v_341 = empty() * r2 = r2 * r_7379 = r2 |  )
    || ( | dseg_ne(r2, r2, r2, r_7379, v_341) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_7377 = @this: = r0  * r_7389 = nil() = $n0  *
      r_7391 = r2 = r1 = $r3 = $r4  *
      r_7432 = numeric_const(0) = length(empty())  
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7381)*
      field(@this:, <java.util.AbstractList: int modCount>, r_7386)*
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_7379)*
      field(@this:, <java.util.LinkedList: int size>, length(v_341))*
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
      | 
        | dseg_ne(r_7379, nil(), nil(), r_7379, cons(nil(), empty())) *
          dseg_ne(r_7381, nil(), nil(), r_7381, cons(nil(), empty()))
         
      |- v_341 = empty() * r_7379 = r2 * r_7381 = r2 |  



====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_7433 = numeric_const(0) = length(empty())  *
      r_7437 = r2 = r1 = $r3 = $r4  * r_7438 = nil() = $n0  *
      r_7447 = @this: = r0  
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_7444)*
      field(@this:, <java.util.AbstractList: int modCount>, r_7440)*
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_7445)*
      field(@this:, <java.util.LinkedList: int size>, length(v_341))*
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
      | 
        | dseg_ne(r_7445, nil(), nil(), r_7445, cons(nil(), empty())) *
          dseg_ne(r_7444, nil(), nil(), r_7444, cons(nil(), empty()))
         
      |- r_7444 = r2 | dseg_ne(r2, r2, r2, r_7445, v_341) 

Rule: dseg_ne_empty5_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_7433 = numeric_const(0) = length(empty())  *
       r_7437 = r2 = r1 = $r3 = $r4  * r_7438 = nil() = $n0  *
       r_7447 = @this: = r0  
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_7444)*
       field(@this:, <java.util.AbstractList: int modCount>, r_7440)*
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_7445)*
       field(@this:, <java.util.LinkedList: int size>, length(v_341))*
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)
       | 
         | dseg_ne(r_7444, nil(), nil(), r_7444, cons(nil(), empty())) *
           dseg_ne(r_7445, nil(), nil(), r_7445, cons(nil(), empty()))
          
       |-  |  False



====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Backtracking!
Backtracking!
Backtracking!
Backtracking!

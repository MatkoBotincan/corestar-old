Goal
r_6701 = @this: = r0  * r_6703 = v_341 = cons(r_6713, r_6715)  *
r_6705 = $r3 = $r4  * r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
r_6767 = (numeric_const(1) + length(r_6715)) = length(v_341)   
| r2 != $r3
  | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r3) *
    dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
    field($r3, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_6706) *
    field(@this:, <java.util.LinkedList: int size>,
          (numeric_const(1) + length(r_6715))) *
    field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
    field($r3,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_6704)
  (r_6715 = empty() * r2 = $r3 * r_6704 = r_6706 |  )
  || ( | dseg_ne(r2, r_6706, $r3, r_6704, r_6715) ) 
|- 
   | field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_2154)
   

Start time :3.036189 
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

>r_6701 = @this: = r0  * r_6703 = v_341 = cons(r_6713, r_6715)  *
 r_6705 = $r3 = $r4  * r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
 r_6767 = (numeric_const(1) + length(r_6715)) = length(v_341)   
 | r2 != $r3
   | field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_6704) *
     field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + length(r_6715))) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_6706) *
     dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r3) *
     dseg_ne(r2, r_6706, $r3, r_6704, r_6715)
    
 |- 
    | field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            _v_2154)
    

Rule: dseg_cons_field_lookup_left

FooElim eqs : r_6715 = cons(r_6856, r_6858)


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_6701 = @this: = r0  *
  r_6703 = v_341 = cons(r_6713, cons(r_6856, r_6858))  *
  r_6705 = $r3 = $r4  * r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
  r_6767 = (numeric_const(1) + length(cons(r_6856, r_6858))) = length(v_341) 
    | r2 != $r3
      | field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_6704) *
        field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
        field(@this:, <java.util.LinkedList: int size>,
              (numeric_const(1) + length(cons(r_6856, r_6858)))) *
        field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_6706) *
        dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3) *
        node(r2, r_6706, r_6857, r_6856) *
        dseg(r_6857, r2, $r3, r_6704, r_6858)
       
  |- 
     | field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             _v_2154)
     

Rule: node_lookup_next

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_6701 = @this: = r0  *
   r_6703 = v_341 = cons(r_6713, cons(r_6856, r_6858))  *
   r_6705 = $r3 = $r4  * r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
   r_6767 = (numeric_const(1) + length(cons(r_6856, r_6858))) = length(v_341) 
    field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          _v_2154)
   | r2 != $r3
     | dseg(_v_2154, r2, $r3, r_6704, r_6858) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_6704) *
       field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
       field(@this:, <java.util.LinkedList: int size>,
             (numeric_const(1) + length(cons(r_6856, r_6858)))) *
       field($r3,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_6706) *
       dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3) *
       field(r2, <java.util.LinkedList$Entry: java.lang.Object element>,
             r_6856) *
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_6706)
      
   |-  |  

Rule: field_field_distinct_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_6701 = @this: = r0  *
    r_6703 = v_341 = cons(r_6713, cons(r_6856, r_6858))  *
    r_6705 = $r3 = $r4  * r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
    r_6767 = (numeric_const(1) + length(cons(r_6856, r_6858))) =
    length(v_341)  
    field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          _v_2154)
    | 
      | field(r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_6706) *
        field(r2, <java.util.LinkedList$Entry: java.lang.Object element>,
              r_6856) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3) *
        dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
        field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_6706) *
        field(@this:, <java.util.LinkedList: int size>,
              (numeric_const(1) + length(cons(r_6856, r_6858)))) *
        field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
        field($r3,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_6704) *
        dseg(_v_2154, r2, $r3, r_6704, r_6858)
       
    |-  |  

Rule: dseg_disj_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_6701 = @this: = r0  *
     r_6703 = v_341 = cons(r_6713, cons(r_6856, r_6858))  *
     r_6705 = $r3 = $r4  * r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
     r_6767 = (numeric_const(1) + length(cons(r_6856, r_6858))) =
     length(v_341)  
     field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_2154)
     | 
       | field(r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               r_6706) *
         field(r2, <java.util.LinkedList$Entry: java.lang.Object element>,
               r_6856) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r3) *
         dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
         field($r3,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               r_6706) *
         field(@this:, <java.util.LinkedList: int size>,
               (numeric_const(1) + length(cons(r_6856, r_6858)))) *
         field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
         field($r3,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               r_6704)
       (r_6858 = empty() * _v_2154 = $r3 * r_6704 = r2 |  )
       || ( | dseg_ne(_v_2154, r2, $r3, r_6704, r_6858) ) 
     |-  |  



====================Start rewrites======================Using rule:
length_cons gives r_6862 = (numeric_const(1) + length(r_6858))  
equal to r_6764 = length(cons(r_6856, r_6858)) 
.
Rewritten to
 r_6701 = @this: = r0  *
 r_6703 = v_341 = cons(r_6713, cons(r_6856, r_6858))  * r_6705 = $r3 = $r4  *
 r_6714 = r2 = r1  * r_6717 = nil() = $n0  *
 r_6767 = (numeric_const(1) + (numeric_const(1) + length(r_6858))) =
 length(v_341)  *
 r_6862 = (numeric_const(1) + length(r_6858)) = length(cons(r_6856, r_6858)) 
  field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
        _v_2154)
 | 
   | field(r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_6706) *
     field(r2, <java.util.LinkedList$Entry: java.lang.Object element>, r_6856) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r3) *
     dseg_ne(r_6706, nil(), nil(), r_6706, cons(nil(), empty())) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_6706) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + (numeric_const(1) + length(r_6858)))) *
     field(@this:, <java.util.AbstractList: int modCount>, r_6711) *
     field($r3,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_6704)
   (r_6858 = empty() * _v_2154 = $r3 * r_6704 = r2 |  )
   || ( | dseg_ne(_v_2154, r2, $r3, r_6704, r_6858) ) 
 |-  |  


====================Start rewrites=======================================Finished rewrites====================

End time :3.064191 

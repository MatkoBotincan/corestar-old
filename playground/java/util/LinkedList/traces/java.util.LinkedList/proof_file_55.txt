Goal
r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)   
 | $ret_var = _v_1663
   | field(@this:, <java.util.LinkedList: int modCount>,
           (_v_1666 + numeric_const(1))) *
     node(_v_1663, $r2, $r2, @parameter0:) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           _v_1663) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           _v_1663) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(0) + numeric_const(1))) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2)
    
|- v_342 = r_5456 * @parameter0: = r_5455 * cons(r_5455, r_5456) = r_5454 *
   v_342 = r_5453 * app(r_5453, r_5454) = r_5452 * {list=r_5452} = r_5451 *
   @this: = r_5450 | LinkedList$java.util.LinkedList(r_5450, r_5451) 
   

Start time :2.372148 
FooElim eqs : $ret_var = _v_1663


====================Start rewrites======================Using rule:
plus_reorder_numeric_const_second gives
r_5460 = (numeric_const(1) + _v_1666)  
equal to r_5404 = (_v_1666 + numeric_const(1)) 
.
Rewritten to
 r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
 r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
 r_5399 = $ret_var = _v_1663  *
 r_5460 = (numeric_const(1) + _v_1666) = (_v_1666 + numeric_const(1))   
  | 
    | field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_1666)) *
      node($ret_var, $r2, $r2, @parameter0:) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $ret_var) *
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(0) + numeric_const(1))) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)
     
 |- @this: = @this: *
    {list=app(v_342, cons(@parameter0:, v_342))} = {list=app(v_342,
                                                         cons(@parameter0:,
                                                         v_342))} *
    app(v_342, cons(@parameter0:, v_342)) = app(v_342,
                                            cons(@parameter0:, v_342)) *
    v_342 = v_342 * cons(@parameter0:, v_342) = cons(@parameter0:, v_342) *
    @parameter0: = @parameter0: * v_342 = v_342
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=app(v_342,
                                            cons(@parameter0:, v_342))})
    


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule:
app_empty_first gives r_5459 = cons(@parameter0:, v_342)  
equal to r_5458 = app(v_342, cons(@parameter0:, v_342)) 
.
Rewritten to
 r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
 r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
 r_5399 = $ret_var = _v_1663  *
 r_5459 = cons(@parameter0:, v_342) = app(v_342, cons(@parameter0:, v_342))  
  | 
    | field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_1666)) *
      node($ret_var, $r2, $r2, @parameter0:) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $ret_var) *
      field(@this:, <java.util.LinkedList: int size>,
            (numeric_const(0) + numeric_const(1))) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)
     
 |- @this: = @this: *
    {list=cons(@parameter0:, v_342)} = {list=cons(@parameter0:, v_342)} *
    cons(@parameter0:, v_342) = cons(@parameter0:, v_342) * v_342 = v_342 *
    cons(@parameter0:, v_342) = cons(@parameter0:, v_342) *
    @parameter0: = @parameter0: * v_342 = v_342
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=cons(@parameter0:, v_342)})
    


====================Start rewrites=======================================Finished rewrites====================

>r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
 r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
 r_5399 = $ret_var = _v_1663   
 | 
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2) *
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(0) + numeric_const(1))) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $ret_var) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           $ret_var) *
     node($ret_var, $r2, $r2, @parameter0:) *
     field(@this:, <java.util.LinkedList: int modCount>,
           (numeric_const(1) + _v_1666))
    
 |- 
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=cons(@parameter0:, v_342)})
    

Rule: dseg_node_rollup_left

Foo

====================Start rewrites======================Using rule:
plus_zero_first gives r_5402 = numeric_const(1)  
equal to r_5403 = (numeric_const(0) + numeric_const(1)) 
.
Rewritten to
 r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
 r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
 r_5399 = $ret_var = _v_1663  *
 r_5402 = numeric_const(1) = (numeric_const(0) + numeric_const(1))   
  | 
    | dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342)) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $ret_var) *
      field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
      field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_1666))
     
 |- 
    | LinkedList$java.util.LinkedList(@this:,
                                      {list=cons(@parameter0:, v_342)})
    


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
  r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
  r_5399 = $ret_var = _v_1663   
  | 
    | field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_1666)) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
      field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $ret_var) *
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var) *
      dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))
     
  |- 
     | LinkedList$java.util.LinkedList(@this:,
                                       {list=cons(@parameter0:, v_342)})
     

Rule: apf_body_right_LinkedList

Foo

====================Start rewrites======================Using rule:
length_cons_empty gives r_5402 = numeric_const(1)  
equal to r_5469 = length(cons(@parameter0:, v_342)) 
.
Rewritten to
 r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
 r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
 r_5399 = $ret_var = _v_1663  *
 r_5402 = numeric_const(1) = length(cons(@parameter0:, v_342))   
 | 
   | field(@this:, <java.util.LinkedList: int modCount>,
           (numeric_const(1) + _v_1666)) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2) *
     field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $ret_var) *
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           $ret_var) *
     dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))
    
 |- cons(@parameter0:, v_342) = cons(@parameter0:, v_342) *
    numeric_const(1) = numeric_const(1)
    | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                              {modCount=r_5467}) *
      field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) *
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r_5464) *
      field(r_5464,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_5465) *
      field(r_5464,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_5463) *
      dseg(r_5465, r_5464, r_5464, r_5463, cons(@parameter0:, v_342))
    


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
   r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
   r_5399 = $ret_var = _v_1663  
   field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
   | 
     | dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342)) *
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $ret_var) *
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             $ret_var) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2) *
       field(@this:, <java.util.LinkedList: int modCount>,
             (numeric_const(1) + _v_1666))
      
   |- 
      | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                {modCount=r_5467}) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>,
              r_5464) *
        field(r_5464,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              r_5465) *
        field(r_5464,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_5463) *
        dseg(r_5465, r_5464, r_5464, r_5463, cons(@parameter0:, v_342))
      

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
    r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
    r_5399 = $ret_var = _v_1663  
    field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r2)*
    field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
    | 
      | field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_1666)) *
        dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342)) *
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $ret_var) *
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $ret_var)
       
    |- 
       | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                 {modCount=r_5467}) *
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               r_5465) *
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               r_5463) *
         dseg(r_5465, $r2, $r2, r_5463, cons(@parameter0:, v_342))
       

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
     r_5301 = v_342 = empty()  * r_5385 = numeric_const(0) = length(v_342)  *
     r_5399 = $ret_var = _v_1663  
     field($r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           $ret_var)*
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r2)*
     field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
     | 
       | field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               $ret_var) *
         field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_1666)) *
         dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))
        
     |- 
        | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                  {modCount=r_5467}) *
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                r_5463) *
          dseg($ret_var, $r2, $r2, r_5463, cons(@parameter0:, v_342))
        

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
      r_5301 = v_342 = empty()  *
      r_5385 = numeric_const(0) = length(v_342)  *
      r_5399 = $ret_var = _v_1663  
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $ret_var)*
      field($r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $ret_var)*
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
      field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
      | 
        | dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342)) *
          field(@this:, <java.util.LinkedList: int modCount>,
                (numeric_const(1) + _v_1666))
         
      |- 
         | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                   {modCount=r_5467}) *
           dseg($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))
         

Rule: dseg_non_empty3_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
       r_5301 = v_342 = empty()  *
       r_5385 = numeric_const(0) = length(v_342)  *
       r_5399 = $ret_var = _v_1663  
       dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))*
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             $ret_var)*
       field($r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $ret_var)*
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
       field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
       | 
         | field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_1666))
          
       |- 
          | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                    {modCount=r_5467})
          

Rule: apf_body_right_AbstractSequentialList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
        r_5301 = v_342 = empty()  *
        r_5385 = numeric_const(0) = length(v_342)  *
        r_5399 = $ret_var = _v_1663  
        dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))*
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $ret_var)*
        field($r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $ret_var)*
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
        field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
        | 
          | field(@this:, <java.util.LinkedList: int modCount>,
                  (numeric_const(1) + _v_1666))
           
        |-  | AbstractList$java.util.AbstractList(@this:, {modCount=r_5470}) 

Rule: apf_body_right_AbstractList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
         r_5301 = v_342 = empty()  *
         r_5385 = numeric_const(0) = length(v_342)  *
         r_5399 = $ret_var = _v_1663  
         dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))*
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               $ret_var)*
         field($r2,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $ret_var)*
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r2)*
         field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
         | 
           | field(@this:, <java.util.LinkedList: int modCount>,
                   (numeric_const(1) + _v_1666))
            
         |-  | field(@this:, <java.util.AbstractList: int modCount>, r_5472) 

Rule: inherit_modcount2

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------->r_109 = @this: = r0  * r_5259 = @parameter0: = r1  *
          r_5301 = v_342 = empty()  *
          r_5385 = numeric_const(0) = length(v_342)  *
          r_5399 = $ret_var = _v_1663  
          field(@this:, <java.util.AbstractList: int modCount>,
                (numeric_const(1) + _v_1666))*
          dseg_ne($ret_var, $r2, $r2, $ret_var, cons(@parameter0:, v_342))*
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                $ret_var)*
          field($r2,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $ret_var)*
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r2)*
          field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
          |  |    |-  |  



====================Start rewrites=======================================Finished rewrites====================

End time :2.388149 

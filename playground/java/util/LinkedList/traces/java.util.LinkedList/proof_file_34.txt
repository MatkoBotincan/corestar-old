Goal
r_2624 = v_299 = **second**  * r_2634 = numeric_const(1) = length(v_297)  *
r_2645 = v_297 = cons(v_296, v_298)  * r_2647 = @this: = r0  *
r_2648 = v_298 = empty()  * r_2679 = numeric_const(0) = length(v_298)  *
r_2687 = $r3 = $ret_var   
|  | 
  (v_299 = **first** * $r3 = nil()
  | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          $r1)
  )
  || (v_299 = v_299 * $r3 = v_296
     | field(@this:, <java.util.LinkedList: int modCount>,
             (_v_941 + numeric_const(1))) *
       node($r2, nil(), nil(), nil()) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             $r1) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $r1) *
       field(@this:, <java.util.LinkedList: int size>,
             builtin_minus(numeric_const(1), numeric_const(1))) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
     ) 
|- v_299 = r_2802 * **first** = r_2801 * v_298 = r_2800 *
   {list=r_2800} = r_2799 * @this: = r_2798 * v_299 = r_2797 *
   v_298 = r_2796 * {list=r_2796} = r_2795 * $r3 = r_2794 * v_296 = r_2793 | 
    (r_2802 = r_2801 | LinkedList$java.util.LinkedList(r_2798, r_2799) )
    || (r_2794 = r_2793 * r_2802 = r_2797
       | LinkedList$java.util.LinkedList(r_2798, r_2795) )

Start time :1.040065 
Foo

====================Start rewrites======================Using rule: minus_eq
gives r_2679 = numeric_const(0) = length(v_298)  
equal to r_2690 = builtin_minus(numeric_const(1), numeric_const(1)) 
.
Rewritten to
 r_2624 = v_299 = **second**  * r_2634 = numeric_const(1) = length(v_297)  *
 r_2645 = v_297 = cons(v_296, v_298)  * r_2647 = @this: = r0  *
 r_2648 = v_298 = empty()  *
 r_2679 = numeric_const(0) = length(v_298) =
 builtin_minus(numeric_const(1), numeric_const(1))  *
 r_2687 = $r3 = $ret_var   
 |  | 
   (v_299 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_299 = v_299 * $r3 = v_296
      | field(@this:, <java.util.LinkedList: int modCount>,
              (_v_941 + numeric_const(1))) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $r1) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |- v_296 = v_296 * $r3 = $r3 * {list=v_298} = {list=v_298} * v_298 = v_298 *
    v_299 = v_299 * @this: = @this: * {list=v_298} = {list=v_298} *
    v_298 = v_298 * **first** = **first** * v_299 = v_299 | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = v_296 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites======================Using rule:
plus_reorder_numeric_const_second gives r_2805 = (numeric_const(1) + _v_941) 
 equal to r_2691 = (_v_941 + numeric_const(1)) 
.
Rewritten to
 r_2624 = v_299 = **second**  * r_2634 = numeric_const(1) = length(v_297)  *
 r_2645 = v_297 = cons(v_296, v_298)  * r_2647 = @this: = r0  *
 r_2648 = v_298 = empty()  * r_2679 = numeric_const(0) = length(v_298)  *
 r_2687 = $r3 = $ret_var  *
 r_2805 = (numeric_const(1) + _v_941) = (_v_941 + numeric_const(1))   
  |  | 
    (v_299 = **first** * $r3 = nil()
    | field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
    )
    || (v_299 = v_299 * $r3 = v_296
       | field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_941)) *
         node($r2, nil(), nil(), nil()) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               $r1) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $r1) *
         field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
       ) 
 |- v_296 = v_296 * $r3 = $r3 * {list=v_298} = {list=v_298} * v_298 = v_298 *
    v_299 = v_299 * @this: = @this: * {list=v_298} = {list=v_298} *
    v_298 = v_298 * **first** = **first** * v_299 = v_299 | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = v_296 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )


====================Start rewrites=======================================Finished rewrites====================

>r_2624 = v_299 = **second**  * r_2634 = numeric_const(1) = length(v_297)  *
 r_2645 = v_297 = cons(v_296, v_298)  * r_2647 = @this: = r0  *
 r_2648 = v_298 = empty()  * r_2679 = numeric_const(0) = length(v_298)  *
 r_2687 = $r3 = $ret_var   
 |  | 
   (v_299 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_299 = v_299 * $r3 = v_296
      | field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_941)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $r1) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = v_296 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )



====================Start rewrites======================Using rule:
length_cons gives r_2806 = (numeric_const(1) + numeric_const(0))  
equal to r_2634 = numeric_const(1) = length(v_297) 
.
Rewritten to
 r_2624 = v_299 = **second**  * r_2645 = v_297 = cons(v_296, v_298)  *
 r_2647 = @this: = r0  * r_2648 = v_298 = empty()  *
 r_2679 = numeric_const(0) = length(v_298)  * r_2687 = $r3 = $ret_var  *
 r_2806 = ((r_2806 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_297)   
 |  | 
   (v_299 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_299 = v_299 * $r3 = v_296
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_2806 + numeric_const(0)) + _v_941)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $r1) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = v_296 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )


====================Start rewrites======================Rewritten to
 r_2624 = v_299 = **second**  * r_2645 = v_297 = cons(v_296, v_298)  *
 r_2647 = @this: = r0  * r_2648 = v_298 = empty()  *
 r_2679 = numeric_const(0) = length(v_298)  * r_2687 = $r3 = $ret_var  *
 r_2806 = ((r_2806 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_297)   
 |  | 
   (v_299 = **first** * $r3 = nil()
   | field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1)
   )
   || (v_299 = v_299 * $r3 = v_296
      | field(@this:, <java.util.LinkedList: int modCount>,
              ((r_2806 + numeric_const(0)) + _v_941)) *
        node($r2, nil(), nil(), nil()) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $r1) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)
      ) 
 |-  | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = v_296 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : v_299 = v_299 * $r3 = v_296
Elim eqs : v_299 = **first** *
$r3 = nil()
Success : r_2624 = v_299 = **second**  *
          r_2645 = v_297 = cons(v_296, v_298)  * r_2647 = @this: = r0  *
          r_2648 = v_298 = empty()  *
          r_2679 = numeric_const(0) = length(v_298)  *
          r_2687 = $r3 = $ret_var  *
          r_2806 = numeric_const(1) = length(v_297)   
          | v_299 = **first** * $r3 = nil()
            | field(@this:,
                    <java.util.LinkedList: java.util.LinkedList$Entry header>,
                    $r1)
             
          |-  | 
             (v_299 = **first**
             | LinkedList$java.util.LinkedList(@this:, {list=v_298}) 
             )
             || ($r3 = v_296 * v_299 = v_299
                | LinkedList$java.util.LinkedList(@this:, {list=v_298}) 
                )


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_2807 = numeric_const(1) = length(v_297)  *
  r_2812 = $r3 = $ret_var = v_296  *
  r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
  r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
  r_2828 = v_299 = **second**   
  | 
    | field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
      field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
      field($r1,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            $r1) *
      field($r1,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            $r1) *
      node($r2, nil(), nil(), nil()) *
      field(@this:, <java.util.LinkedList: int modCount>,
            (numeric_const(1) + _v_941))
     
  |-  | 
     (v_299 = **first**
     | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
     || ($r3 = $r3 * v_299 = v_299
        | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )

Rule: dseg_node_rollup_left

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_2807 = numeric_const(1) = length(v_297)  *
   r_2812 = $r3 = $ret_var = v_296  *
   r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
   r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
   r_2828 = v_299 = **second**   
   | 
     | field(@this:, <java.util.LinkedList: int modCount>,
             (numeric_const(1) + _v_941)) *
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
       field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             $r1) *
       field($r1,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             $r1) *
       dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))
      
   |-  | 
      (v_299 = **first**
      | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
      || ($r3 = $r3 * v_299 = v_299
         | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )



====================Start rewrites======================Using rule:
length_cons gives r_2830 = (numeric_const(1) + numeric_const(0))  
equal to r_2807 = numeric_const(1) = length(v_297) 
.
Rewritten to
 r_2812 = $r3 = $ret_var = v_296  *
 r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
 r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
 r_2828 = v_299 = **second**  *
 r_2830 = ((r_2830 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_297)   
 | 
   | field(@this:, <java.util.LinkedList: int modCount>,
           ((r_2830 + numeric_const(0)) + _v_941)) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, $r1) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))
    
 |-  | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = $r3 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )


====================Start rewrites======================Rewritten to
 r_2812 = $r3 = $ret_var = v_296  *
 r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
 r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
 r_2828 = v_299 = **second**  *
 r_2830 = ((r_2830 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_297)   
 | 
   | field(@this:, <java.util.LinkedList: int modCount>,
           ((r_2830 + numeric_const(0)) + _v_941)) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, $r1) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))
    
 |-  | 
    (v_299 = **first**
    | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )
    || ($r3 = $r3 * v_299 = v_299
       | LinkedList$java.util.LinkedList(@this:, {list=v_298}) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_2812 = $r3 = $ret_var = v_296  *
    r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
    r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
    r_2828 = v_299 = **second**  * r_2830 = numeric_const(1) = length(v_297) 
      | 
        | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                $r1) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $r1) *
          field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r1) *
          field(@this:, <java.util.LinkedList: int modCount>,
                (numeric_const(1) + _v_941))
         
    |-  |  False



====================Start rewrites======================Using rule:
length_cons gives r_2852 = (numeric_const(1) + numeric_const(0))  
equal to r_2830 = numeric_const(1) = length(v_297) 
.
Rewritten to
 r_2812 = $r3 = $ret_var = v_296  *
 r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
 r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
 r_2828 = v_299 = **second**  *
 r_2852 = ((r_2852 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_297)   
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, $r1) *
     field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_2852 + numeric_const(0)) + _v_941))
    
 |-  |  False


====================Start rewrites======================Rewritten to
 r_2812 = $r3 = $ret_var = v_296  *
 r_2813 = numeric_const(0) = length(v_298)  * r_2818 = v_298 = empty()  *
 r_2819 = @this: = r0  * r_2820 = v_297 = cons($r3, v_298)  *
 r_2828 = v_299 = **second**  *
 r_2852 = ((r_2852 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_297)   
 | 
   | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           $r1) *
     field($r1,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>, $r1) *
     field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           $r1) *
     field(@this:, <java.util.LinkedList: int modCount>,
           ((r_2852 + numeric_const(0)) + _v_941))
    
 |-  |  False


====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_2831 = numeric_const(1) = length(v_297)  *
    r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
    r_2842 = @this: = r0  * r_2843 = v_298 = empty()  *
    r_2847 = numeric_const(0) = length(v_298)  *
    r_2848 = $r3 = $ret_var = v_296   
    | 
      | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $r1) *
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1) *
        field(@this:, <java.util.LinkedList: int size>, numeric_const(0)) *
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
        field(@this:, <java.util.LinkedList: int modCount>,
              (numeric_const(1) + _v_941))
       
    |-  | LinkedList$java.util.LinkedList(@this:, {list=v_298}) 

Rule: apf_body_right_LinkedList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_2831 = numeric_const(1) = length(v_297)  *
     r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
     r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
     r_2853 = v_298 = empty()  * r_2861 = length(v_298) = numeric_const(0)  
     field(@this:, <java.util.LinkedList: int size>, length(v_298))
     | 
       | field(@this:, <java.util.LinkedList: int modCount>,
               (numeric_const(1) + _v_941)) *
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $r1) *
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               $r1) *
         dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))
        
     |- 
        | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                  {modCount=r_2859}) *
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                r_2856) *
          field(r_2856,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                r_2857) *
          field(r_2856,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                r_2855) *
          dseg(r_2857, r_2856, r_2856, r_2855, v_298)
        

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_2831 = numeric_const(1) = length(v_297)  *
      r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
      r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
      r_2853 = v_298 = empty()  * r_2861 = length(v_298) = numeric_const(0)  
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
      field(@this:, <java.util.LinkedList: int size>, length(v_298))
      | 
        | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                $r1) *
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $r1) *
          field(@this:, <java.util.LinkedList: int modCount>,
                (numeric_const(1) + _v_941))
         
      |- 
         | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                   {modCount=r_2859}) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 r_2857) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 r_2855) *
           dseg(r_2857, $r1, $r1, r_2855, v_298)
         

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_2831 = numeric_const(1) = length(v_297)  *
       r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
       r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
       r_2853 = v_298 = empty()  * r_2861 = length(v_298) = numeric_const(0) 
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1)*
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
        field(@this:, <java.util.LinkedList: int size>, length(v_298))
       | 
         | field(@this:, <java.util.LinkedList: int modCount>,
                 (numeric_const(1) + _v_941)) *
           dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 $r1)
          
       |- 
          | AbstractSequentialList$java.util.AbstractSequentialList(@this:,
                                                                    {modCount=r_2859}) *
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  r_2855) *
            dseg($r1, $r1, $r1, r_2855, v_298)
          

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------->r_2831 = numeric_const(1) = length(v_297)  *
        r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
        r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
        r_2853 = v_298 = empty()  *
        r_2861 = length(v_298) = numeric_const(0)  
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              $r1)*
        field($r1,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
              $r1)*
        field(@this:,
              <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
        field(@this:, <java.util.LinkedList: int size>, length(v_298))
        | 
          | field(@this:, <java.util.LinkedList: int modCount>,
                  (numeric_const(1) + _v_941)) *
            dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))
           
        |- 
           | AbstractSequentialList$java.util.AbstractSequentialList(
             @this:, {modCount=r_2859}) * dseg($r1, $r1, $r1, $r1, v_298)
           

Rule: dseg_empty1_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-------->r_2831 = numeric_const(1) = length(v_297)  *
         r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
         r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
         r_2853 = v_298 = empty()  *
         r_2861 = length(v_298) = numeric_const(0)  
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
               $r1)*
         field($r1,
               <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
               $r1)*
         field(@this:,
               <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
         field(@this:, <java.util.LinkedList: int size>, length(v_298))
         | 
           | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
             field(@this:, <java.util.LinkedList: int modCount>,
                   (numeric_const(1) + _v_941))
            
         |- 
            | AbstractSequentialList$java.util.AbstractSequentialList(
              @this:, {modCount=r_2859})
            

Rule: apf_body_right_AbstractSequentialList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--------->r_2831 = numeric_const(1) = length(v_297)  *
          r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
          r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
          r_2853 = v_298 = empty()  *
          r_2861 = length(v_298) = numeric_const(0)  
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                $r1)*
          field($r1,
                <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                $r1)*
          field(@this:,
                <java.util.LinkedList: java.util.LinkedList$Entry header>,
                $r1)*
          field(@this:, <java.util.LinkedList: int size>, length(v_298))
          | 
            | field(@this:, <java.util.LinkedList: int modCount>,
                    (numeric_const(1) + _v_941)) *
              dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))
             
          |- 
             | AbstractList$java.util.AbstractList(@this:, {modCount=r_2862}) 
             

Rule: apf_body_right_AbstractList

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---------->r_2831 = numeric_const(1) = length(v_297)  *
           r_2833 = v_299 = **second**  *
           r_2841 = v_297 = cons($r3, v_298)  * r_2842 = @this: = r0  *
           r_2848 = $r3 = $ret_var = v_296  * r_2853 = v_298 = empty()  *
           r_2861 = length(v_298) = numeric_const(0)  
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                 $r1)*
           field($r1,
                 <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                 $r1)*
           field(@this:,
                 <java.util.LinkedList: java.util.LinkedList$Entry header>,
                 $r1)*
           field(@this:, <java.util.LinkedList: int size>, length(v_298))
           | 
             | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298)) *
               field(@this:, <java.util.LinkedList: int modCount>,
                     (numeric_const(1) + _v_941))
              
           |- 
              | field(@this:, <java.util.AbstractList: int modCount>, r_2864) 
              

Rule: inherit_modcount2

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----------->r_2831 = numeric_const(1) = length(v_297)  *
            r_2833 = v_299 = **second**  *
            r_2841 = v_297 = cons($r3, v_298)  * r_2842 = @this: = r0  *
            r_2848 = $r3 = $ret_var = v_296  * r_2853 = v_298 = empty()  *
            r_2861 = length(v_298) = numeric_const(0)  
            field(@this:, <java.util.AbstractList: int modCount>,
                  (numeric_const(1) + _v_941))*
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
                  $r1)*
            field($r1,
                  <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
                  $r1)*
            field(@this:,
                  <java.util.LinkedList: java.util.LinkedList$Entry header>,
                  $r1)*
            field(@this:, <java.util.LinkedList: int size>, length(v_298))
            |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))   |- 
             |  



====================Start rewrites======================Using rule:
length_cons gives r_2867 = (numeric_const(1) + length(v_298))  
equal to r_2831 = numeric_const(1) = length(v_297) 
.
Rewritten to
 r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
 r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
 r_2853 = v_298 = empty()  * r_2861 = length(v_298) = numeric_const(0)  *
 r_2867 = ((r_2867 + length(v_298)) + length(v_298)) = numeric_const(1) =
 length(v_297)  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_2867 + length(v_298)) + _v_941))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r1)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $r1)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_298))
 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))   |-  |  


====================Start rewrites======================Rewritten to
 r_2833 = v_299 = **second**  * r_2841 = v_297 = cons($r3, v_298)  *
 r_2842 = @this: = r0  * r_2848 = $r3 = $ret_var = v_296  *
 r_2853 = v_298 = empty()  * r_2861 = length(v_298) = numeric_const(0)  *
 r_2867 = ((r_2867 + length(v_298)) + length(v_298)) = numeric_const(1) =
 length(v_297)  
 field(@this:, <java.util.AbstractList: int modCount>,
       ((r_2867 + length(v_298)) + _v_941))*
 field($r1,
       <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>, $r1)*
 field($r1, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       $r1)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, $r1)*
 field(@this:, <java.util.LinkedList: int size>, length(v_298))
 |  | dseg_ne($r2, nil(), nil(), $r2, cons(nil(), v_298))   |-  |  


====================Start rewrites=======================================Finished rewrites====================

End time :1.080067 

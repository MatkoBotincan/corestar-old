
---------------------------------------------------------
Goal
r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
r_8877 = v_341 = cons(r_8868, r_8866)  * r_8879 = @this: = r0   
| 
  | field(r2,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_8876) *
    field(@this:, <java.util.AbstractList: int modCount>, r_8870) *
    field(@this:, <java.util.LinkedList: int size>, length(v_341)) *
    field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_8875) *
    dseg_ne(r_8875, nil(), nil(), r_8875, cons(nil(), empty())) *
    field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          r2)
  (r_8866 = empty() * r2 = r2 * r_8876 = r_8875 |  )
  || ( | dseg_ne(r2, r_8875, r2, r_8876, r_8866) ) 
|- v_341 = r_8897 * app(r_8898, r_8882) = r_8897 *
   cons(r_8884, r_8888) = r_8896 * @this: = r_8895 * @this: = r_8895 *
   <java.util.LinkedList: java.util.LinkedList$Entry header> = r_8894 *
   <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = r_8891 *
   <java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = r_8890 *
   <java.util.LinkedList: int size> = r_8889 * empty() = r_8888 *
   <java.util.AbstractList: int modCount> = r_8886 * nil() = r_8884 *
   nil() = r_8884 * r2 = r_8883 * r2 = r_8883 * r2 = r_8883 * r2 = r_8883 *
   length(r_8897) = r_8881
   | dseg_ne(r_8892, r_8884, r_8884, r_8892, r_8896) *
     field(r_8883, r_8890, r_8892) * field(r_8895, r_8889, r_8881) *
     field(r_8895, r_8886, r_8887) * field(r_8883, r_8891, r_8893) *
     dseg_ne(r_8885, r_8884, r_8884, r_8885, r_8896) *
     field(r_8895, r_8894, r_8883)
   (r_8882 = r_8888 * r_8883 = r_8883 * r_8893 = r_8885 |  )
   || ( | dseg_ne(r_8883, r_8885, r_8883, r_8893, r_8882) )

Start time :4.128257 
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

>r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8877 = v_341 = cons(r_8868, r_8866)  * r_8879 = @this: = r0  
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, length(v_341))
 | 
   | dseg_ne(r_8875, nil(), nil(), r_8875, cons(nil(), empty())) *
     field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_8875) *
     field(@this:, <java.util.AbstractList: int modCount>, r_8870) *
     field(r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_8876)
   (r_8866 = empty() * r2 = r2 * r_8876 = r_8875 |  )
   || ( | dseg_ne(r2, r_8875, r2, r_8876, r_8866) ) 
 |- app(r_8898, r_8882) = v_341
    | dseg_ne(r_8892, nil(), nil(), r_8892, cons(nil(), empty())) *
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_8892) *
      field(@this:, <java.util.AbstractList: int modCount>, r_8887) *
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_8893) *
      dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
    (r_8882 = empty() * r2 = r2 * r_8893 = r_8885 |  )
    || ( | dseg_ne(r2, r_8885, r2, r_8893, r_8882) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

->r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
  r_8877 = v_341 = cons(r_8868, r_8866)  * r_8879 = @this: = r0  
  dseg_ne(r_8875, nil(), nil(), r_8875, cons(nil(), empty()))*
  field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
        r_8875)*
  field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
  field(@this:, <java.util.LinkedList: int size>, length(v_341))
  | 
    | field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_8876) *
      field(@this:, <java.util.AbstractList: int modCount>, r_8870)
    (r_8866 = empty() * r2 = r2 * r_8876 = r_8875 |  )
    || ( | dseg_ne(r2, r_8875, r2, r_8876, r_8866) ) 
  |- app(r_8898, r_8882) = v_341
     | field(@this:, <java.util.AbstractList: int modCount>, r_8887) *
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_8893) *
       dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
     (r_8882 = empty() * r2 = r2 * r_8893 = r_8885 |  )
     || ( | dseg_ne(r2, r_8885, r2, r_8893, r_8882) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

-->r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
   r_8877 = v_341 = cons(r_8868, r_8866)  * r_8879 = @this: = r0  
   field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
   dseg_ne(r_8875, nil(), nil(), r_8875, cons(nil(), empty()))*
   field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
         r_8875)*
   field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
         r2)*
   field(@this:, <java.util.LinkedList: int size>, length(v_341))
   | 
     | field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_8876)
     (r_8866 = empty() * r2 = r2 * r_8876 = r_8875 |  )
     || ( | dseg_ne(r2, r_8875, r2, r_8876, r_8866) ) 
   |- app(r_8898, r_8882) = v_341
      | field(r2,
              <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
              r_8893) *
        dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
      (r_8882 = empty() * r2 = r2 * r_8893 = r_8885 |  )
      || ( | dseg_ne(r2, r_8885, r2, r_8893, r_8882) )

Rule: field_remove1

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

--->r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
    r_8877 = v_341 = cons(r_8868, r_8866)  * r_8879 = @this: = r0  
    field(r2,
          <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
          r_8876)*
    field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
    dseg_ne(r_8875, nil(), nil(), r_8875, cons(nil(), empty()))*
    field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
          r_8875)*
    field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
          r2)*
    field(@this:, <java.util.LinkedList: int size>, length(v_341))
    |  | 
      (r_8866 = empty() * r2 = r2 * r_8876 = r_8875 |  )
      || ( | dseg_ne(r2, r_8875, r2, r_8876, r_8866) ) 
    |- app(r_8898, r_8882) = v_341
       | dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
       (r_8882 = empty() * r2 = r2 * r_8876 = r_8885 |  )
       || ( | dseg_ne(r2, r_8885, r2, r_8876, r_8882) )



====================Start rewrites======================Using rule:
length_cons gives r_8905 = (numeric_const(1) + length(r_8866))  
equal to r_8864 = length(v_341) 
.
Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8877 = v_341 = cons(r_8868, r_8866)  * r_8879 = @this: = r0  *
 r_8905 = (numeric_const(1) + length(r_8866)) = length(v_341)  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8875, nil(), nil(), r_8875, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8875)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>,
       (numeric_const(1) + length(r_8866)))
 |  | 
   (r_8866 = empty() * r2 = r2 * r_8876 = r_8875 |  )
   || ( | dseg_ne(r2, r_8875, r2, r_8876, r_8866) ) 
 |- app(r_8898, r_8882) = v_341
    | dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
    (r_8882 = empty() * r2 = r2 * r_8876 = r_8885 |  )
    || ( | dseg_ne(r2, r_8885, r2, r_8876, r_8882) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
FooElim eqs : r_8866 = empty() * r2 = r2 *
r_8876 = r_8875


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

---->r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
     r_8877 = v_341 = cons(r_8868, empty())  * r_8879 = @this: = r0  *
     r_8905 = (numeric_const(1) + length(empty())) = length(v_341)  
     field(r2,
           <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
           r_8876)*
     field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
     dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
     field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
           r_8876)*
     field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>,
           r2)*
     field(@this:, <java.util.LinkedList: int size>,
           (numeric_const(1) + length(empty())))
     |  |   
     |- app(r_8898, r_8882) = v_341
        | dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
        (r_8882 = empty() * r2 = r2 * r_8876 = r_8885 |  )
        || ( | dseg_ne(r2, r_8885, r2, r_8876, r_8882) )



====================Start rewrites======================Using rule:
length_cons_empty gives r_8904 = numeric_const(1)  
equal to r_8905 = (numeric_const(1) + length(empty())) = length(v_341) 
.
Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8877 = v_341 = cons(r_8868, empty())  * r_8879 = @this: = r0  *
 r_8904 = numeric_const(1) = (numeric_const(1) + length(empty())) =
 length(v_341)  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8876)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) | 
  |   
 |- app(r_8898, r_8882) = v_341
    | dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
    (r_8882 = empty() * r2 = r2 * r_8876 = r_8885 |  )
    || ( | dseg_ne(r2, r_8885, r2, r_8876, r_8882) )


====================Start rewrites======================Using rule:
length_empty gives r_8931 = numeric_const(0)  
equal to r_8902 = length(empty()) 
.
Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8877 = v_341 = cons(r_8868, empty())  * r_8879 = @this: = r0  *
 r_8904 = numeric_const(1) = (numeric_const(1) + numeric_const(0)) =
 length(v_341)  * r_8931 = numeric_const(0) = length(empty())  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8876)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) | 
  |   
 |- app(r_8898, r_8882) = v_341
    | dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
    (r_8882 = empty() * r2 = r2 * r_8876 = r_8885 |  )
    || ( | dseg_ne(r2, r_8885, r2, r_8876, r_8882) )


====================Start rewrites======================Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8877 = v_341 = cons(r_8868, empty())  * r_8879 = @this: = r0  *
 r_8904 = numeric_const(1) = (numeric_const(1) + numeric_const(0)) =
 length(v_341)  * r_8931 = numeric_const(0) = length(empty())  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8876)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) | 
  |   
 |- app(r_8898, r_8882) = v_341
    | dseg_ne(r_8885, nil(), nil(), r_8885, cons(nil(), empty()))
    (r_8882 = empty() * r2 = r2 * r_8876 = r_8885 |  )
    || ( | dseg_ne(r2, r_8885, r2, r_8876, r_8882) )


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Case split on or right!
Foo

====================Start rewrites======================Using rule:
app_empty_second gives r_8898 equal to r_8901 = app(r_8898, empty()) 
.
Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8877 = v_341 = cons(r_8868, empty())  * r_8879 = @this: = r0  *
 r_8904 = numeric_const(1) = length(v_341)  *
 r_8931 = numeric_const(0) = length(empty())  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8876)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, numeric_const(1)) | 
  |   
 |- app(r_8898, empty()) = v_341 * r_8876 = r_8876 * empty() = empty()
    | dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty())) 


====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
      r_8879 = @this: = r0  * r_8898 = v_341 = cons(r_8868, empty())  *
      r_8904 = numeric_const(1) = length(v_341)  *
      r_8931 = numeric_const(0) = length(empty())  
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_8876)*
      field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
      dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_8876)*
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
      field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
      |  |   
      |-  | dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty())) 



====================Start rewrites======================Using rule:
length_cons gives r_8954 = (numeric_const(1) + numeric_const(0))  
equal to r_8904 = numeric_const(1) = length(v_341) 
.
Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8879 = @this: = r0  * r_8898 = v_341 = cons(r_8868, empty())  *
 r_8931 = numeric_const(0) = length(empty())  *
 r_8954 = ((r_8954 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_341)  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8876)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, (r_8954 + numeric_const(0)))
 |  |    |-  | dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty())) 


====================Start rewrites======================Rewritten to
 r_8865 = nil() = $n0  * r_8867 = r2 = r1 = $r3 = $r4  *
 r_8879 = @this: = r0  * r_8898 = v_341 = cons(r_8868, empty())  *
 r_8931 = numeric_const(0) = length(empty())  *
 r_8954 = ((r_8954 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_341)  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8876)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8870)*
 dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8876)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, (r_8954 + numeric_const(0)))
 |  |    |-  | dseg_ne(r_8876, nil(), nil(), r_8876, cons(nil(), empty())) 


====================Start rewrites=======================================Finished rewrites====================

Query external prover
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

----->r_8932 = numeric_const(0) = length(empty())  *
      r_8934 = numeric_const(1) = length(v_341)  * r_8941 = @this: = r0  *
      r_8943 = v_341 = cons(r_8950, empty())  *
      r_8951 = r2 = r1 = $r3 = $r4  * r_8953 = nil() = $n0  
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
            r_8944)*
      field(@this:, <java.util.AbstractList: int modCount>, r_8948)*
      dseg_ne(r_8944, nil(), nil(), r_8944, cons(nil(), empty()))*
      field(r2,
            <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
            r_8944)*
      field(@this:,
            <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
      field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
      |  |   
      |- app(r_8937, r_8939) = v_341
         | dseg_ne(r2, r_8938, r2, r_8944, r_8939) *
           dseg_ne(r_8938, nil(), nil(), r_8938, cons(nil(), empty()))
         

Rule: dseg_ne_empty5_right

Foo

====================Start rewrites=======================================Finished rewrites====================



====================Start rewrites=======================================Finished rewrites====================

------>r_8932 = numeric_const(0) = length(empty())  *
       r_8934 = numeric_const(1) = length(v_341)  * r_8941 = @this: = r0  *
       r_8943 = v_341 = cons(r_8950, empty())  *
       r_8951 = r2 = r1 = $r3 = $r4  * r_8953 = nil() = $n0  
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
             r_8944)*
       field(@this:, <java.util.AbstractList: int modCount>, r_8948)*
       dseg_ne(r_8944, nil(), nil(), r_8944, cons(nil(), empty()))*
       field(r2,
             <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
             r_8944)*
       field(@this:,
             <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
       field(@this:, <java.util.LinkedList: int size>, numeric_const(1))
       |  |    |-  |  False



====================Start rewrites======================Using rule:
length_cons gives r_8955 = (numeric_const(1) + numeric_const(0))  
equal to r_8934 = numeric_const(1) = length(v_341) 
.
Rewritten to
 r_8932 = numeric_const(0) = length(empty())  * r_8941 = @this: = r0  *
 r_8943 = v_341 = cons(r_8950, empty())  * r_8951 = r2 = r1 = $r3 = $r4  *
 r_8953 = nil() = $n0  *
 r_8955 = ((r_8955 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_341)  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8944)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8948)*
 dseg_ne(r_8944, nil(), nil(), r_8944, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8944)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, (r_8955 + numeric_const(0)))
 |  |    |-  |  False


====================Start rewrites======================Rewritten to
 r_8932 = numeric_const(0) = length(empty())  * r_8941 = @this: = r0  *
 r_8943 = v_341 = cons(r_8950, empty())  * r_8951 = r2 = r1 = $r3 = $r4  *
 r_8953 = nil() = $n0  *
 r_8955 = ((r_8955 + numeric_const(0)) + numeric_const(0)) =
 numeric_const(1) = length(v_341)  
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>,
       r_8944)*
 field(@this:, <java.util.AbstractList: int modCount>, r_8948)*
 dseg_ne(r_8944, nil(), nil(), r_8944, cons(nil(), empty()))*
 field(r2, <java.util.LinkedList$Entry: java.util.LinkedList$Entry next>,
       r_8944)*
 field(@this:, <java.util.LinkedList: java.util.LinkedList$Entry header>, r2)*
 field(@this:, <java.util.LinkedList: int size>, (r_8955 + numeric_const(0)))
 |  |    |-  |  False


====================Start rewrites=======================================Finished rewrites====================

Ask external prover to complete proof.
Not an or!
Find plain contradiction:
Ask external prover to complete proof.
Backtracking!
Backtracking!
Backtracking!
Backtracking!
Backtracking!

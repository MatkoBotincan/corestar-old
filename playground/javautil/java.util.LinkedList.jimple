public class java.util.LinkedList extends java.util.AbstractSequentialList implements java.util.List, java.util.Deque, java.lang.Cloneable, java.io.Serializable
{
    private transient java.util.LinkedList$Entry header;
    private transient int size;
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry $r1, $r2, $r3, $r4;

        r0 := @this: java.util.LinkedList;
        specialinvoke r0.<java.util.AbstractSequentialList: void <init>()>();
        $r1 = new java.util.LinkedList$Entry;
        specialinvoke $r1.<java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>(null, null, null);
        r0.<java.util.LinkedList: java.util.LinkedList$Entry header> = $r1;
        r0.<java.util.LinkedList: int size> = 0;
        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r4.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $r3;
        $r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $r3;
        return;
    }
/*
    public void <init>(java.util.Collection)
    {
        java.util.LinkedList r0;
        java.util.Collection r1;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.util.Collection;
        specialinvoke r0.<java.util.LinkedList: void <init>()>();
        virtualinvoke r0.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r1);
        return;
    }
*/
    public java.lang.Object getFirst()
    {
        java.util.LinkedList r0;
        int $i0;
        java.util.NoSuchElementException $r1;
        java.util.LinkedList$Entry $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        /*$r1 = new java.util.NoSuchElementException;
        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();
        throw $r1;*/
        return null;

     label0:
        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r3 = $r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        $r4 = $r3.<java.util.LinkedList$Entry: java.lang.Object element>;
        return $r4;
    }

    public java.lang.Object getLast()
    {
        java.util.LinkedList r0;
        int $i0;
        java.util.NoSuchElementException $r1;
        java.util.LinkedList$Entry $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        /*$r1 = new java.util.NoSuchElementException;
        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();
        throw $r1;*/
        return null;

     label0:
        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r3 = $r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        $r4 = $r3.<java.util.LinkedList$Entry: java.lang.Object element>;
        return $r4;
    }

    public java.lang.Object removeFirst()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.LinkedList;
        $r1 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r2 = $r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        $r3 = specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>($r2);
        return $r3;
    }

    public java.lang.Object removeLast()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.LinkedList;
        $r1 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r2 = $r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        $r3 = specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>($r2);
        return $r3;
    }

    public void addFirst(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Entry $r2, $r3;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r3 = $r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>(r1, $r3);
        return;
    }

    public void addLast(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Entry $r2;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>(r1, $r2);
        return;
    }
/*
    public boolean contains(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        $i0 = virtualinvoke r0.<java.util.LinkedList: int indexOf(java.lang.Object)>(r1);
        if $i0 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }
*/
    public int size()
    {
        java.util.LinkedList r0;
        int $i0;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        return $i0;
    }
/*
    public boolean add(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Entry $r2;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>(r1, $r2);
        return 1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r10;
        java.util.LinkedList$Entry r2, $r3, $r4, $r7, r8, $r9;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label3;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r2 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r2 == $r4 goto label2;

        $r5 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        if $r5 != null goto label1;

        specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>(r2);
        return 1;

     label1:
        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label0;

     label2:
        goto label6;

     label3:
        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r8 = $r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label4:
        $r9 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r8 == $r9 goto label6;

        $r10 = r8.<java.util.LinkedList$Entry: java.lang.Object element>;
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
        if $z0 == 0 goto label5;

        specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>(r8);
        return 1;

     label5:
        r8 = r8.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label4;

     label6:
        return 0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.LinkedList r0;
        java.util.Collection r1;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.util.Collection;
        $i0 = r0.<java.util.LinkedList: int size>;
        $z0 = virtualinvoke r0.<java.util.LinkedList: boolean addAll(int,java.util.Collection)>($i0, r1);
        return $z0;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.LinkedList r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Collection r1;
        java.lang.StringBuilder $r2, $r8, $r9, $r10, $r11;
        java.lang.Object[] r3;
        java.util.LinkedList$Entry r4, r5, r6, $r14, $r15;
        java.lang.IndexOutOfBoundsException $r7;
        java.lang.String $r12;
        java.lang.Object $r16;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.util.Collection;
        if i0 < 0 goto label0;

        $i3 = r0.<java.util.LinkedList: int size>;
        if i0 <= $i3 goto label1;

     label0:
        $r7 = new java.lang.IndexOutOfBoundsException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");
        $i4 = r0.<java.util.LinkedList: int size>;
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);
        throw $r7;

     label1:
        r3 = interfaceinvoke r1.<java.util.Collection: java.lang.Object[] toArray()>();
        i1 = lengthof r3;
        if i1 != 0 goto label2;

        return 0;

     label2:
        $i5 = r0.<java.util.LinkedList: int modCount>;
        $i6 = $i5 + 1;
        r0.<java.util.LinkedList: int modCount> = $i6;
        $i7 = r0.<java.util.LinkedList: int size>;
        if i0 != $i7 goto label3;

        $r14 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        goto label4;

     label3:
        $r14 = specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry entry(int)>(i0);

     label4:
        r4 = $r14;
        r5 = r4.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        i2 = 0;

     label5:
        if i2 >= i1 goto label6;

        $r15 = new java.util.LinkedList$Entry;
        $r16 = r3[i2];
        specialinvoke $r15.<java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>($r16, r4, r5);
        r6 = $r15;
        r5.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = r6;
        r5 = r6;
        i2 = i2 + 1;
        goto label5;

     label6:
        r4.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = r5;
        $i8 = r0.<java.util.LinkedList: int size>;
        $i9 = $i8 + i1;
        r0.<java.util.LinkedList: int size> = $i9;
        return 1;
    }
*/
    public void clear()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry r1, r2, $r3, $r4, $r5, $r6, $r7;
        null_type $n0;
        int $i0, $i1;

        r0 := @this: java.util.LinkedList;
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r1 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r1 == $r4 goto label1;

        r2 = r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        $n0 = null;
        r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $n0;
        r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $n0;
        r1.<java.util.LinkedList$Entry: java.lang.Object element> = null;
        r1 = r2;
        goto label0;

     label1:
        $r5 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $r6;
        $r5.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $r6;
        r0.<java.util.LinkedList: int size> = 0;
        $i0 = r0.<java.util.LinkedList: int modCount>;
        $i1 = $i0 + 1;
        r0.<java.util.LinkedList: int modCount> = $i1;
        return;
    }
/*
    public java.lang.Object get(int)
    {
        java.util.LinkedList r0;
        int i0;
        java.util.LinkedList$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        $r1 = specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry entry(int)>(i0);
        $r2 = $r1.<java.util.LinkedList$Entry: java.lang.Object element>;
        return $r2;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.LinkedList r0;
        int i0;
        java.lang.Object r1, r3;
        java.util.LinkedList$Entry r2;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        r2 = specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry entry(int)>(i0);
        r3 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        r2.<java.util.LinkedList$Entry: java.lang.Object element> = r1;
        return r3;
    }

    public void add(int, java.lang.Object)
    {
        java.util.LinkedList r0;
        int i0, $i1;
        java.lang.Object r1;
        java.util.LinkedList$Entry $r4;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        r1 := @parameter1: java.lang.Object;
        $i1 = r0.<java.util.LinkedList: int size>;
        if i0 != $i1 goto label0;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        goto label1;

     label0:
        $r4 = specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry entry(int)>(i0);

     label1:
        specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>(r1, $r4);
        return;
    }

    public java.lang.Object remove(int)
    {
        java.util.LinkedList r0;
        int i0;
        java.util.LinkedList$Entry $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        $r1 = specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry entry(int)>(i0);
        $r2 = specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>($r1);
        return $r2;
    }
*/
    private java.util.LinkedList$Entry entry(int)
    {
        java.util.LinkedList r0;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r7;
        java.util.LinkedList$Entry r2;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.String $r8;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        if i0 < 0 goto label0;

        $i2 = r0.<java.util.LinkedList: int size>;
        if i0 < $i2 goto label1;

     label0:
        /*$r3 = new java.lang.IndexOutOfBoundsException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index: ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");
        $i3 = r0.<java.util.LinkedList: int size>;
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);
        throw $r3;*/
        return null;

     label1:
        r2 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $i4 = r0.<java.util.LinkedList: int size>;
        $i5 = $i4 >> 1;
        if i0 >= $i5 goto label4;

        i1 = 0;

     label2:
        if i1 > i0 goto label3;

        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        i1 = i1 + 1;
        goto label2;

     label3:
        goto label6;

     label4:
        i6 = r0.<java.util.LinkedList: int size>;

     label5:
        if i6 <= i0 goto label6;

        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        i6 = i6 + -1;
        goto label5;

     label6:
        return r2;
    }
/*
    public int indexOf(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r9;
        int i0;
        java.util.LinkedList$Entry r2, $r3, $r4, $r6, r7, $r8;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        i0 = 0;
        if r1 != null goto label3;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r2 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r2 == $r4 goto label2;

        $r5 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        if $r5 != null goto label1;

        return i0;

     label1:
        i0 = i0 + 1;
        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label0;

     label2:
        goto label6;

     label3:
        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r7 = $r6.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label4:
        $r8 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r7 == $r8 goto label6;

        $r9 = r7.<java.util.LinkedList$Entry: java.lang.Object element>;
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label5;

        return i0;

     label5:
        i0 = i0 + 1;
        r7 = r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label4;

     label6:
        return -1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r9;
        int i0;
        java.util.LinkedList$Entry r2, $r3, $r4, $r6, r7, $r8;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        i0 = r0.<java.util.LinkedList: int size>;
        if r1 != null goto label3;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r2 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r2 == $r4 goto label2;

        i0 = i0 + -1;
        $r5 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        if $r5 != null goto label1;

        return i0;

     label1:
        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        goto label0;

     label2:
        goto label6;

     label3:
        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r7 = $r6.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;

     label4:
        $r8 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r7 == $r8 goto label6;

        i0 = i0 + -1;
        $r9 = r7.<java.util.LinkedList$Entry: java.lang.Object element>;
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label5;

        return i0;

     label5:
        r7 = r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        goto label4;

     label6:
        return -1;
    }

    public java.lang.Object peek()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getFirst()>();
        return $r1;
    }

    public java.lang.Object element()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getFirst()>();
        return $r1;
    }

    public java.lang.Object poll()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object removeFirst()>();
        return $r1;
    }

    public java.lang.Object remove()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object removeFirst()>();
        return $r1;
    }

    public boolean offer(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        $z0 = virtualinvoke r0.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean offerFirst(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        virtualinvoke r0.<java.util.LinkedList: void addFirst(java.lang.Object)>(r1);
        return 1;
    }

    public boolean offerLast(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        virtualinvoke r0.<java.util.LinkedList: void addLast(java.lang.Object)>(r1);
        return 1;
    }

    public java.lang.Object peekFirst()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getFirst()>();
        return $r1;
    }

    public java.lang.Object peekLast()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object getLast()>();
        return $r1;
    }

    public java.lang.Object pollFirst()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object removeFirst()>();
        return $r1;
    }

    public java.lang.Object pollLast()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        if $i0 != 0 goto label0;

        return null;

     label0:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object removeLast()>();
        return $r1;
    }

    public void push(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        virtualinvoke r0.<java.util.LinkedList: void addFirst(java.lang.Object)>(r1);
        return;
    }

    public java.lang.Object pop()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object removeFirst()>();
        return $r1;
    }

    public boolean removeFirstOccurrence(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        $z0 = virtualinvoke r0.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);
        return $z0;
    }

    public boolean removeLastOccurrence(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r10;
        java.util.LinkedList$Entry r2, $r3, $r4, $r7, r8, $r9;
        boolean $z0;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        if r1 != null goto label3;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r2 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r2 == $r4 goto label2;

        $r5 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        if $r5 != null goto label1;

        specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>(r2);
        return 1;

     label1:
        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        goto label0;

     label2:
        goto label6;

     label3:
        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r8 = $r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;

     label4:
        $r9 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r8 == $r9 goto label6;

        $r10 = r8.<java.util.LinkedList$Entry: java.lang.Object element>;
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r10);
        if $z0 == 0 goto label5;

        specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>(r8);
        return 1;

     label5:
        r8 = r8.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        goto label4;

     label6:
        return 0;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.LinkedList r0;
        int i0;
        java.util.LinkedList$ListItr $r1;

        r0 := @this: java.util.LinkedList;
        i0 := @parameter0: int;
        $r1 = new java.util.LinkedList$ListItr;
        specialinvoke $r1.<java.util.LinkedList$ListItr: void <init>(java.util.LinkedList,int)>(r0, i0);
        return $r1;
    }
*/
    private java.util.LinkedList$Entry addBefore(java.lang.Object, java.util.LinkedList$Entry)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Entry r2, $r3, r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.LinkedList$Entry;
        $r3 = new java.util.LinkedList$Entry;
        $r5 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        specialinvoke $r3.<java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>(r1, r2, $r5);
        r4 = $r3;
        $r6 = r4.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        $r6.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = r4;
        $r7 = r4.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        $r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = r4;
        $i0 = r0.<java.util.LinkedList: int size>;
        $i1 = $i0 + 1;
        r0.<java.util.LinkedList: int size> = $i1;
        $i2 = r0.<java.util.LinkedList: int modCount>;
        $i3 = $i2 + 1;
        r0.<java.util.LinkedList: int modCount> = $i3;
        return r4;
    }

    private java.lang.Object remove(java.util.LinkedList$Entry)
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry r1, $r3, $r5, $r6, $r7, $r8;
        java.lang.Object r2;
        null_type $n0;
        java.util.NoSuchElementException $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.util.LinkedList$Entry;
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r1 != $r3 goto label0;

        /*$r4 = new java.util.NoSuchElementException;
        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();
        throw $r4;*/
        return null;

     label0:
        r2 = r1.<java.util.LinkedList$Entry: java.lang.Object element>;
        $r5 = r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        $r6 = r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        $r5.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $r6;
        $r7 = r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        $r8 = r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous>;
        $r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $r8;
        $n0 = null;
        r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $n0;
        r1.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $n0;
        r1.<java.util.LinkedList$Entry: java.lang.Object element> = null;
        $i0 = r0.<java.util.LinkedList: int size>;
        $i1 = $i0 - 1;
        r0.<java.util.LinkedList: int size> = $i1;
        $i2 = r0.<java.util.LinkedList: int modCount>;
        $i3 = $i2 + 1;
        r0.<java.util.LinkedList: int modCount> = $i3;
        return r2;
    }
/*
    public java.util.Iterator descendingIterator()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$DescendingIterator $r1;

        r0 := @this: java.util.LinkedList;
        $r1 = new java.util.LinkedList$DescendingIterator;
        specialinvoke $r1.<java.util.LinkedList$DescendingIterator: void <init>(java.util.LinkedList,java.util.LinkedList$1)>(r0, null);
        return $r1;
    }

    public java.lang.Object clone()
    {
        java.util.LinkedList r0, r3;
        null_type n0;
        java.lang.CloneNotSupportedException r1, $r4;
        java.lang.Object $r2, $r13;
        java.lang.InternalError $r5;
        java.util.LinkedList$Entry $r6, $r7, $r8, $r9, $r10, r11, $r12;

        r0 := @this: java.util.LinkedList;
        n0 = null;

     label0:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r3 = (java.util.LinkedList) $r2;

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r1 = $r4;
        $r5 = new java.lang.InternalError;
        specialinvoke $r5.<java.lang.InternalError: void <init>()>();
        throw $r5;

     label3:
        $r6 = new java.util.LinkedList$Entry;
        specialinvoke $r6.<java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>(null, null, null);
        r3.<java.util.LinkedList: java.util.LinkedList$Entry header> = $r6;
        $r7 = r3.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r8 = r3.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r9 = r3.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r9.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $r8;
        $r7.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $r8;
        r3.<java.util.LinkedList: int size> = 0;
        r3.<java.util.LinkedList: int modCount> = 0;
        $r10 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r11 = $r10.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label4:
        $r12 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r11 == $r12 goto label5;

        $r13 = r11.<java.util.LinkedList$Entry: java.lang.Object element>;
        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>($r13);
        r11 = r11.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label4;

     label5:
        return r3;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public java.lang.Object[] toArray()
    {
        java.util.LinkedList r0;
        java.lang.Object[] r1;
        int i0, $i1, $i2;
        java.util.LinkedList$Entry r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: java.util.LinkedList;
        $i1 = r0.<java.util.LinkedList: int size>;
        r1 = newarray (java.lang.Object)[$i1];
        i0 = 0;
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r2 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r2 == $r4 goto label1;

        $i2 = i0;
        i0 = i0 + 1;
        $r5 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        r1[$i2] = $r5;
        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label0;

     label1:
        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.LinkedList r0;
        java.lang.Object[] r1, r2, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.LinkedList$Entry r3, $r8, $r9;
        java.lang.Class $r4, $r5;
        java.lang.Object $r6, $r10;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.lang.Object[];
        $i1 = lengthof r1;
        $i2 = r0.<java.util.LinkedList: int size>;
        if $i1 >= $i2 goto label0;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();
        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>();
        $i3 = r0.<java.util.LinkedList: int size>;
        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, $i3);
        $r7 = (java.lang.Object[]) $r6;
        r1 = (java.lang.Object[]) $r7;

     label0:
        i0 = 0;
        r2 = r1;
        $r8 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r3 = $r8.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label1:
        $r9 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r3 == $r9 goto label2;

        $i4 = i0;
        i0 = i0 + 1;
        $r10 = r3.<java.util.LinkedList$Entry: java.lang.Object element>;
        r2[$i4] = $r10;
        r3 = r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label1;

     label2:
        $i5 = lengthof r1;
        $i6 = r0.<java.util.LinkedList: int size>;
        if $i5 <= $i6 goto label3;

        $i7 = r0.<java.util.LinkedList: int size>;
        r1[$i7] = null;

     label3:
        return r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.LinkedList r0;
        java.io.ObjectOutputStream r1;
        java.util.LinkedList$Entry r2, $r3, $r4;
        int $i0;
        java.lang.Object $r5;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.io.ObjectOutputStream;
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();
        $i0 = r0.<java.util.LinkedList: int size>;
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        r2 = $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;

     label0:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        if r2 == $r4 goto label1;

        $r5 = r2.<java.util.LinkedList$Entry: java.lang.Object element>;
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r5);
        r2 = r2.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next>;
        goto label0;

     label1:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.LinkedList r0;
        java.io.ObjectInputStream r1;
        int i0, i1;
        java.util.LinkedList$Entry $r2, $r3, $r4, $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: java.util.LinkedList;
        r1 := @parameter0: java.io.ObjectInputStream;
        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();
        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();
        $r2 = new java.util.LinkedList$Entry;
        specialinvoke $r2.<java.util.LinkedList$Entry: void <init>(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)>(null, null, null);
        r0.<java.util.LinkedList: java.util.LinkedList$Entry header> = $r2;
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r5 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        $r5.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = $r4;
        $r3.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = $r4;
        i1 = 0;

     label0:
        if i1 >= i0 goto label1;

        $r6 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>($r6, $r7);
        i1 = i1 + 1;
        goto label0;

     label1:
        return;
    }
*/
    static java.util.LinkedList$Entry access$000(java.util.LinkedList)
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry $r1;

        r0 := @parameter0: java.util.LinkedList;
        $r1 = r0.<java.util.LinkedList: java.util.LinkedList$Entry header>;
        return $r1;
    }

    static int access$100(java.util.LinkedList)
    {
        java.util.LinkedList r0;
        int $i0;

        r0 := @parameter0: java.util.LinkedList;
        $i0 = r0.<java.util.LinkedList: int size>;
        return $i0;
    }

    static java.lang.Object access$200(java.util.LinkedList, java.util.LinkedList$Entry)
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Entry r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.LinkedList;
        r1 := @parameter1: java.util.LinkedList$Entry;
        $r2 = specialinvoke r0.<java.util.LinkedList: java.lang.Object remove(java.util.LinkedList$Entry)>(r1);
        return $r2;
    }

    static java.util.LinkedList$Entry access$300(java.util.LinkedList, java.lang.Object, java.util.LinkedList$Entry)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Entry r2, $r3;

        r0 := @parameter0: java.util.LinkedList;
        r1 := @parameter1: java.lang.Object;
        r2 := @parameter2: java.util.LinkedList$Entry;
        $r3 = specialinvoke r0.<java.util.LinkedList: java.util.LinkedList$Entry addBefore(java.lang.Object,java.util.LinkedList$Entry)>(r1, r2);
        return $r3;
    }
}
class java.util.LinkedList$Entry extends java.lang.Object
{
    java.lang.Object element;
    java.util.LinkedList$Entry next;
    java.util.LinkedList$Entry previous;

    void <init>(java.lang.Object, java.util.LinkedList$Entry, java.util.LinkedList$Entry)
    {
        java.util.LinkedList$Entry r0, r2, r3;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList$Entry;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.LinkedList$Entry;
        r3 := @parameter2: java.util.LinkedList$Entry;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<java.util.LinkedList$Entry: java.lang.Object element> = r1;
        r0.<java.util.LinkedList$Entry: java.util.LinkedList$Entry next> = r2;
        r0.<java.util.LinkedList$Entry: java.util.LinkedList$Entry previous> = r3;
        return;
    }
}

class ConnectionFactory extends java.lang.Object implements ResourceFactory
{
/*Signature: Ljava/lang/Object;LResourceFactory<Ljava/sql/Connection;Ljava/sql/SQLException;>;*/
/*ConnectionFactory.java*/
    java.lang.String url;
    java.lang.String user;
    java.lang.String password;

/*6*/
    void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        ConnectionFactory r0;
        java.lang.String r1, r2, r3;

        r0 := @this: ConnectionFactory;
/*7*/
        r1 := @parameter0: java.lang.String;
/*7*/
        r2 := @parameter1: java.lang.String;
/*7*/
        r3 := @parameter2: java.lang.String;
/*7*/
        specialinvoke r0.<java.lang.Object: void <init>()>();
/*7*/
        r0.<ConnectionFactory: java.lang.String url> = r1;
/*8*/
        r0.<ConnectionFactory: java.lang.String user> = r2;
/*9*/
        r0.<ConnectionFactory: java.lang.String password> = r3;
/*10*/
        return;
/*11*/
    }

/*13*/
    public java.sql.Connection makeResource() throws java.sql.SQLException
    {
        ConnectionFactory r0;
        java.lang.String $r1, $r2, $r3;
        java.sql.Connection $r4;

        r0 := @this: ConnectionFactory;
/*14*/
        $r1 = r0.<ConnectionFactory: java.lang.String url>;
/*14*/
        $r2 = r0.<ConnectionFactory: java.lang.String user>;
/*14*/
        $r3 = r0.<ConnectionFactory: java.lang.String password>;
/*14*/
        $r4 = staticinvoke <java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);
/*14*/
        return $r4;
/*14*/
    }

/*17*/
    public void destructResource(java.sql.Connection) throws java.sql.SQLException
    {
        ConnectionFactory r0;
        java.sql.Connection r1;

        r0 := @this: ConnectionFactory;
/*18*/
        r1 := @parameter0: java.sql.Connection;
/*18*/
        interfaceinvoke r1.<java.sql.Connection: void close()>();
/*18*/
        return;
/*19*/
    }

/*2*/
    public volatile void destructResource(java.lang.Object) throws java.lang.Exception
    {
        ConnectionFactory r0;
        java.lang.Object r1;
        java.sql.Connection $r2;

        r0 := @this: ConnectionFactory;
/*3*/
        r1 := @parameter0: java.lang.Object;
/*3*/
        $r2 = (java.sql.Connection) r1;
/*3*/
        virtualinvoke r0.<ConnectionFactory: void destructResource(java.sql.Connection)>($r2);
/*3*/
        return;
/*3*/
    }

/*2*/
    public volatile java.lang.Object makeResource() throws java.lang.Exception
    {
        ConnectionFactory r0;
        java.sql.Connection $r1;

        r0 := @this: ConnectionFactory;
/*3*/
        $r1 = virtualinvoke r0.<ConnectionFactory: java.sql.Connection makeResource()>();
/*3*/
        return $r1;
/*3*/
    }
}

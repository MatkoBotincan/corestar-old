class CELL extends ANY {

	int my_value;

	void <init>()
	requires {
		int $res;
		$res = 1;
	}
	ensures {
		CELL Current;
		int a1;
		int $res;
		Current := @this: CELL;
		a1 = virtualinvoke Current.<CELL: int value()>();
		if a1 != 10 goto label_false;
		$res = 1;
		goto label_exit;

		label_false:
		$res = 0;

		label_exit:
	}
	{
		CELL Current;
		Current := @this: CELL;
		Current.<CELL: int my_value> = 10;
	}

	void set_value(int)
	requires {
		int $res;
		$res = 1;
	}
	ensures {
		CELL Current;
		int a1;
		int a2;
		int $res;
		Current := @this: CELL;
		a1 := @parameter0: int;
		a2 = virtualinvoke Current.<CELL: int value()>();
		if a1 != a2 goto label_false;
		$res = 1;
		goto label_exit;

		label_false:
		$res = 0;

		label_exit:
	}
	{
		CELL Current;
		int r1;
		Current := @this: CELL;
		r1 := @parameter0: int;
		Current.<CELL: int my_value> = r1;		
	}

	int value()
	requires {
		int $res;
		$res = 1;
	}
	ensures {
		int $res;
		$res = 1;
	}
	{
		CELL Current;
		int r1;
		Current := @this: CELL;
		r1 = Current.<CELL: int my_value>;
		return r1;
	}

}

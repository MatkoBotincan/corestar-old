/*******************************************
 *  Definitions for datatype of list
 *******************************************/


rewrite cons_hd:
  hd(cons(?x,?y)) = ?x

rewrite cons_tl:
  tl(cons(?x,?y)) = ?y

rewrite app_nil:
  app(empty(), ?x) = ?x

rewrite app_nil2:
  app(?x, empty()) = ?x



/*****************************
 *   Inequalities
 *****************************/
rule cons_nil_neq_right : 
  | | |- cons(?s,?t) != empty() |
if
  | | |- |

rule cons_nil_neq_left :
  | cons(?s,?t) != empty() | |- |
if
  | | |- |



/******************************
 *  Contradictions
 ******************************/
rule cons_nil_eq_left :
 | cons(?s,?t) = empty() | |- |
if


rule cons_nil_eq_right :
 | | |- cons(?s,?t) = empty() |
if
 | | |- | False



/*******************************
 *  Injective axioms
 *******************************/
rule cons_inj_right :
  | | |- cons(?s,?g) = cons(?t,?h) | 
without 
  ?g = ?h * ?s = ?t |-
if
  | | |- ?g = ?h * ?s = ?t | 

rule cons_inj_left :
  | cons(?s,?g) = cons(?t,?h) | |- |
without
  ?g = ?h
if
  | ?g = ?h * ?s = ?t | |- |

rule cons_inj_left :
  | cons(?s,?g) = cons(?t,?h) | |- |
without
  ?s = ?t
if
  | ?g = ?h * ?s = ?t | |- |

rule nil_inj_right :
  | | |- empty() | 
if
  | | |- ?s=?t | 

rule nil_inj_left :
  | empty() | |- |
if
  | ?s=?t | |- |



/*******************************
 *  Injective axioms for neq
 *******************************/

rule nil_inj_neq_right :
  | | |- empty() | 
if
  | | |- ?s!=?t | 

rule nil_inj_neq_left :
  | empty() | |- |
if
  | ?s!=?t | |- |

rule cons_inj_neq_right :
  | | |- cons(?s,?g) != cons(?t,?h) | 
if
  | | |- | (?g != ?h | ) || (?s != ?t | )  

rule cons_inj_neq_left :
  | cons(?s,?g) != cons(?t,?h) | |- |
if
  | | (?g != ?h | ) || (?s != ?t | ) |- |




/***********************************
 *  Rules for simplifying app
 ***********************************/

rule app_is_emp_left : 
     | app(?x,?y) = empty() | |- | 
without
  ?x = empty()
if
     | ?x = empty() * ?y = empty() | |- | 

rule app_is_emp_right : 
     | | |- app(?x,?y) = empty() | 
without
 ?x = empty() * ?y = empty() |-
if
     | | |- ?x = empty() * ?y = empty() |

rule app_neq_emp_left : 
     | app(?x,?y) != empty() | |- | 
if
     | | (?x != empty()|) || (?y != empty() | )  |- | 


rule app_neq_emp_right : 
     | | |- app(?x,?y) != empty() | 
if
     | | |- | (?x != empty() |) || (?y != empty() | ) 
